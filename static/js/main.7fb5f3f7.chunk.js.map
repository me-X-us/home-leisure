{"version":3,"sources":["components/TopBar.js","components/VideoList.js","pages/Main.js","components/CommentList.js","components/MyComment.js","components/VideoInfo.js","pages/Training.js","components/Filter.js","components/SearchVideoList.js","pages/Search.js","pages/SignUp.js","pages/LogIn.js","App.js","serviceWorker.js","index.js"],"names":["ToolBar","value","onClick","onKeyPress","className","to","VideoList","style","textDecoration","src","position","opacity","width","height","alt","Main","CommentList","MyComment","placeholder","VideoInfo","training","backgroundColor","Filter","SearchVideoList","verticalAlign","maxHeight","Search","SignUp","textAlign","LogIn","App","basename","process","exact","path","component","Home","Training","Mypage","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7fb5f3f7.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../css/TopBar.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nconst ToolBar = ({value, onClick, onKeyPress}) => {\r\n    return (\r\n        <div className=\"Start\">\r\n            <div className='Menu-wrapper'>\r\n                {/* 홈 이동 버튼 */}\r\n                <Link to='/'>\r\n                    <button className=\"Home\">Home</button>\r\n                </Link>\r\n\r\n                {/* 검색 */}\r\n                <input className='input' value={value} onClick={onClick} onKeyPress={onKeyPress}/>\r\n                <Link className='Search' to='/Search'>\r\n                    <button className=\"searchButton\" onClick={onClick}>\r\n                        검색\r\n                    </button>\r\n                </Link>\r\n\r\n                {/* 마이페이지 */}\r\n                {/* <Link to='/mypage'><button className=\"MyPage\">MyPage</button></Link> */}\r\n                <Link to='/login'>\r\n                    <button className=\"MyPage\">MyPage</button>\r\n                </Link>\r\n                {/* <ul>\r\n        </ul> */}\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToolBar;","import React from 'react';\r\nimport '../css/VideoList.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction VideoList() {\r\n    return (\r\n        <div className='Video'>\r\n            {/* 나중에 List로 구현 */}\r\n            <Link to='/training' style={{textDecoration: 'none'}}>\r\n\r\n                <img src='https://tistory4.daumcdn.net/tistory/3028340/skin/images/bts_sreenshot.001.jpeg'\r\n                     position=\"relative\" opacity=\"0.5\" width=\"300\" height=\"190\" alt=\"\"/>\r\n                <div>\r\n                    <font className='VideoName'>\r\n                        영상 제목\r\n                    </font>\r\n                </div>\r\n                <div>\r\n                    <font className='Channel'>\r\n                        채널 이름\r\n                    </font>\r\n                </div>\r\n                <div>\r\n                    <font className='Play'>\r\n                        조회수 @\r\n                    </font>\r\n                    &nbsp;-&nbsp;\r\n                    <font className='time'>\r\n                        @분전\r\n                    </font>\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VideoList;","import React from 'react';\r\nimport '../css/Main.css';\r\nimport VideoList from '../components/VideoList';\r\n\r\nfunction Main() {\r\n    return (\r\n        <VideoList/>\r\n    );\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport '../css/CommentList.css';\r\n\r\nfunction CommentList() {\r\n    return (\r\n        <div className='CommentList'>\r\n            <img className='MyProfile' src=\"https://avatars0.githubusercontent.com/u/59818703?s=64&v=4\" alt=\"\"/>\r\n            <text>\r\n                <div className='CommentInfos'>\r\n                    <div className='CommentName'>이름</div>\r\n                    <div className='CommentBody'>댓글</div>\r\n                    {/* <div className='Modify'>수정</div> */}\r\n                </div>\r\n            </text>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CommentList;","import React from 'react';\r\nimport '../css/MyComment.css';\r\nimport CommentList from './CommentList.js';\r\n\r\nfunction MyComment() {\r\n    return (\r\n        <div>\r\n            <div className='Comment'>\r\n                <text>\r\n                    댓글\r\n                </text>\r\n            </div>\r\n            <div className='MyComment'>\r\n                <img className='MyProfile' src=\"https://avatars1.githubusercontent.com/u/19163372?s=60&v=4\" alt=\"\"/>\r\n                <textarea className='Input' placeholder=\"댓글 입력\"/>\r\n                <button className='CommentButton'>\r\n                    입력\r\n                </button>\r\n            </div>\r\n            <CommentList/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyComment;","import React from 'react'\r\nimport '../css/VideoInfo.css'\r\n\r\nfunction VideoInfo() {\r\n    return (\r\n        <div className='VideoInfos'>\r\n            <div>\r\n                <text className='VideoName'>\r\n                    영상 제목\r\n                </text>\r\n                <button className='LikeButton'>\r\n                </button>\r\n                <button className='InputButton'>\r\n                    +\r\n                </button>\r\n            </div>\r\n            <div className='Count'>\r\n                <text>\r\n                    조회수\r\n                </text>\r\n\r\n                <text className='Date'>\r\n                    날짜\r\n                </text>\r\n            </div>\r\n            <div className='ChannelInfo'>\r\n                <img className='Profile' src=\"https://avatars2.githubusercontent.com/u/18184139?s=64&v=4\" alt=\"\"/>\r\n                <text className='ChannelName'>\r\n                    채널 이름\r\n                </text>\r\n                <button className='SubscribeButton'>\r\n                    구독\r\n                </button>\r\n            </div>\r\n            <div className='VideoExplain'>\r\n                <text>\r\n                    영상 설명\r\n                </text>\r\n            </div>\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoInfo;","import React from 'react';\r\nimport MyComment from '../components/MyComment.js'\r\nimport VideoInfo from '../components/VideoInfo.js'\r\n\r\nfunction training() {\r\n    return (\r\n        <div>\r\n            {/* <Player /> */}\r\n            <div style={{height: 700, backgroundColor: 'black'}}>\r\n            </div>\r\n            <VideoInfo/>\r\n            <MyComment/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default training;","import React from 'react';\r\nimport '../css/Filter.css';\r\n\r\nfunction Filter() {\r\n    return (\r\n        <button className='FilterButton'>필터</button>\r\n    )\r\n}\r\n\r\nexport default Filter;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport '../css/SearchVideoList.css';\r\nimport Filter from '../components/Filter.js';\r\n\r\nfunction SearchVideoList() {\r\n    return (\r\n        <div>\r\n            <Filter/>\r\n            <Link to='/training' style={{textDecoration: 'none'}}>\r\n                <div className='SearchVideo'>\r\n                    {/* 나중에 List로 구현 */}\r\n\r\n                    <img className=\"VideoImage\"\r\n                         src='https://tistory4.daumcdn.net/tistory/3028340/skin/images/bts_sreenshot.001.jpeg'\r\n                         style={{verticalAlign: 'top'}} alt=\"\"/>\r\n                    <text>\r\n                        <div className='VideoInfo'>\r\n                            <div className='SearchVideoName' style={{width: \"800px\", maxHeight: \"80px\"}}>영상 제목</div>\r\n                            <div className='SearchChannelName' style={{width: \"800px\", height: \"21px\"}}>채널이름</div>\r\n                            <div className='SearchVideoInfo' style={{width: \"800px\"}}>\r\n                                <font>조회수</font>\r\n                                &nbsp;-&nbsp;\r\n                                <font>날짜</font>\r\n                            </div>\r\n                            <div className='SearchVideoContent' style={{width: \"800px\", height: \"100px\"}}>\r\n                                영상 설명\r\n                            </div>\r\n                        </div>\r\n                    </text>\r\n                </div>\r\n\r\n            </Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchVideoList;","import React from 'react';\r\nimport SearchVideoList from '../components/SearchVideoList';\r\n\r\nfunction Search() {\r\n    return (\r\n        <SearchVideoList/>\r\n    );\r\n}\r\n\r\nexport default Search;","import React from 'react';\r\nimport '../css/SignUp.css';\r\n\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction SignUp() {\r\n    return (\r\n        <div>\r\n            <div style={{textAlign: \"center\"}}>\r\n                <Link to='/'>\r\n                    <button className='MainButton'>\r\n                    </button>\r\n                </Link>\r\n            </div>\r\n            <div style={{textAlign: \"center\"}}>\r\n                <input className='TextInput' placeholder='닉네임'>\r\n\r\n                </input>\r\n            </div>\r\n            <div style={{textAlign: \"center\"}}>\r\n                <input className='IDInput' placeholder='아이디'>\r\n\r\n                </input>\r\n                <button className='DuplicateButton'>\r\n                    ID확인\r\n                </button>\r\n            </div>\r\n            <div style={{textAlign: \"center\"}}>\r\n                <input className='TextInput' placeholder='비밀번호'>\r\n\r\n                </input>\r\n            </div>\r\n            <div style={{textAlign: \"center\"}}>\r\n                <input className='TextInput' placeholder='비밀번호 확인'>\r\n\r\n                </input>\r\n            </div>\r\n            <div style={{textAlign: \"center\"}}>\r\n                <input className='TextInput' placeholder='이메일'>\r\n\r\n                </input>\r\n            </div>\r\n            <div style={{textAlign: \"center\"}}>\r\n                <button className='SignInAndLogInButton'>\r\n                    회원가입 후 로그인\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignUp;","import React from 'react';\r\nimport '../css/LogIn.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst LogIn = ({value, onClick, onKeyPress}) => {\r\n    return (\r\n        <div>\r\n            <div style={{textAlign: \"center\"}}>\r\n                <Link to='/'>\r\n                    <button className='MainButton'>\r\n                    </button>\r\n                </Link>\r\n            </div>\r\n            <div style={{textAlign: \"center\"}}>\r\n                <input className='TextInput' placeholder='아이디'>\r\n\r\n                </input>\r\n            </div>\r\n            <div style={{textAlign: \"center\"}}>\r\n                <input className='TextInput' placeholder='비밀번호'>\r\n\r\n                </input>\r\n            </div>\r\n            <div style={{textAlign: \"center\"}}>\r\n                <button className='LogInButton'>\r\n                    로그인\r\n                </button>\r\n            </div>\r\n            <Link to='/signup'>\r\n                <div style={{textAlign: \"center\"}}>\r\n                    <button className='SignInButton'>\r\n                        회원가입\r\n                    </button>\r\n                </div>\r\n            </Link>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default LogIn;\r\n","import React from 'react';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport TopBar from './components/TopBar'\r\nimport Home from './pages/Main'\r\nimport Mypage from './pages/Main'\r\nimport Training from './pages/Training';\r\nimport Search from './pages/Search';\r\nimport SignUp from './pages/SignUp';\r\nimport LogIn from './pages/LogIn';\r\n\r\nfunction App() {\r\n    return (\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n            <TopBar/>\r\n            <Switch>\r\n                <Route exact path='/' component={Home}/>\r\n                <Route path='/training' component={Training}/>\r\n                <Route path='/mypage' component={Mypage}/>\r\n                <Route path='/Search' component={Search}/>\r\n                <Route path='/login' component={LogIn}/>\r\n                <Route path='/signup' component={SignUp}/>\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport Main from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Main/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}