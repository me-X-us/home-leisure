{"version":3,"sources":["components/TopBar.js","utils/authHttpWrapper.js","components/TrainingCard.js","components/Trainings.js","pages/Main.js","components/SubscribeCard.js","components/Subscribes.js","pages/Profile.js","components/MyComment.js","components/VideoInfo.js","components/Comment.js","utils/posenet/components/Loading.js","utils/posenet/util.js","utils/posenet/components/PoseNet.js","utils/posenet/hooks/useLoadPoseNet.js","utils/posenet/hooks/useInputImage.js","utils/cosineSimilarity.js","components/Player.js","pages/Training.js","components/SearchVideo.js","components/SearchVideoList.js","pages/Search.js","pages/SignUp.js","pages/LogIn.js","utils/Loader.js","pages/Upload.js","pages/OthersProfile.js","App.js","serviceWorker.js","index.js"],"names":["withRouter","props","useState","searchString","setSearchString","search","history","push","className","src","process","onClick","alt","value","onChange","e","target","onKeyPress","key","link","loginStatus","API_BASE_URL","getUserId","a","cookie","load","getUserNickName","getHttp","url","config","checkToken","then","axios","get","postHttp","body","post","putHttp","put","deleteHttp","delete","setTokens","accessToken","refreshToken","setAccessToken","setRefreshToken","checkLoginStatus","undefined","refreshAccessToken","defaults","headers","common","response","data","token","catch","error","console","log","decodedToken","jwt_decode","accessTokenExpires","Date","exp","setMinutes","getMinutes","save","sub","path","expires","roles","nickName","refreshTokenExpires","TrainingCard","to","training","trainingId","position","opacity","width","height","title","trainer","views","modifiedDate","modifiedTime","timeAmount","moment","time","toFixed","setDate","Trainings","trainings","map","Main","setTrainings","useEffect","r","_embedded","trainingList","alert","SubscribeCard","subscribeImage","setSubscribeImage","subscribe","trainerId","trainerName","onError","Subscribes","subscribes","Profile","setNickName","nickNameChange","setNickNameChange","newNickName","setNewNickName","imgPreview","setImagePreview","imgUpload","setImgUpload","imgChanging","setImageChanging","myTrainings","setMyTrainings","myLikeTrainings","setMyLikeTrainings","mySubscribes","setMySubscribes","listState","setlistState","nick","userId","newtList","filter","t","message","changeNickName","submitImage","fd","FormData","append","res","type","accept","URL","createObjectURL","files","placeholder","style","cursor","background","MyComment","commentBody","setCommentBody","myImg","setMyImg","inputComment","refresh","VideoInfo","trainingInfo","likes","like","setLike","setSubscribe","trainerImg","setTrainerImg","ChangeSubscribe","getTrainingInfo","createdDate","toString","slice","Comment","isModify","setIsModify","modifiedComment","setModifiedComment","commenterId","commenterImg","setCommenterImg","onModifyComment","comment","commentId","onDeleteComment","name","Error","color","getConfidentPoses","poses","minPoseConfidence","minPartConfidence","score","pose","keypoints","PoseNet","facingMode","frameRate","input","onEstimate","inferenceConfig","modelConfig","curFrame","ctx","setCtx","net","modelConfigString","JSON","stringify","setNet","posenet","parse","err","poseNet","loadNet","useLoadPoseNet","errorMessage","setErrorMessage","onEstimateRef","useRef","inferenceConfigRef","current","image","setImage","userMediaDisabled","constraints","video","audio","getMediaStreamConstraints","useUserMediaVideo","userMediaError","useInputImage","some","elem","intervalId","requestId","cleanUp","clearInterval","cancelAnimationFrame","estimate","drawImage","estimatePoses","confidentPoses","setInterval","Math","round","requestAnimationFrame","animate","Loading","ref","c","getContext","cosineSimilarity","user","getVector","v1","getUserVector","v2","getScore","i","x","y","getWeight","cosine","vector","sqrt","pow","json","keyPoint","length","point","parseFloat","defaultProps","Player","setCurFrame","player","setPlayer","playing","setPlaying","setScore","feedbackColor","setFeedbackColor","mockData","setMockData","fLen","setFLen","playedSeconds","setPlayedSeconds","setState","frame","frames","border","boxShadow","float","zIndex","padding","controls","onPlay","seekTo","onPause","onSeek","onBuffer","onBufferEnd","progressInterval","onProgress","floor","played","p","flipHorizontal","fontSize","display","justifyContent","left","top","textAlign","padStart","Training","now","setTrainingInfo","comments","setComments","setUserId","match","params","refreshComments","page","totalElements","commentList","index","SearchVideo","SearchVideoList","searchs","Search","setSearchs","searchStr","location","id","setId","chkId","setChkId","setNick","chkNick","setChkNick","pw","setPw","rePw","setRePw","chkPw","setChkPw","email","setEmail","chkEmail","setChkEmail","redirectHome","signUp","password","responseData","setIsLogin","checkNick","status","checkId","disabled","setPassword","signIn","Loader","transform","Upload","uploadAvailable","setUploadAvailable","setVideo","thumbnail","setThumbnail","videoName","setVideoName","videoExplain","setVideoExplain","loading","setLoading","upload","arr","_links","self","href","split","tID","uploadVideo","OthersProfile","profileImg","setProfileImg","App","setLoginStatus","checkLogin","basename","exact","component","MyPage","render","Boolean","window","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.90ad7764.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport '../css/TopBar.css';\nimport { withRouter } from 'react-router-dom';\n\n\nconst TopBar = (props) => {\n    const [searchString, setSearchString] = useState(\"\");\n    const logo = process.env.PUBLIC_URL + '/logo.png';\n\n    const onSearchStringChanges = e => setSearchString(e.target.value);\n\n    const home = () => props.history.push('/');\n    const search = () => props.history.push('/search?title=' + searchString);\n    const loginOrMyPage = () => {\n        let link = props.loginStatus ? \"/mypage\" : \"/login\";\n        props.history.push(link)\n    };\n    const onKeyPress = (e) => {\n        if (e.key === 'Enter' && searchString !== \"\") {\n            search();\n        }\n    };\n\n    return (\n        <div>\n            <div className='TopBar-wrapper'>\n                <img className=\"Home\" src = {logo} onClick={home} alt={''} />\n                <div className='Search'>\n                    <input className='input' value={searchString} onChange={onSearchStringChanges} onKeyPress={onKeyPress} />\n                    <button className=\"searchButton\" onClick={search}>검색</button>\n                </div>\n                <button className=\"MyPage\" onClick={loginOrMyPage}>{props.loginStatus ? \"mypage\" : \"login\"}</button>\n            </div>\n            <hr className='line' />\n        </div>\n    )\n};\n\nexport default withRouter(TopBar);","import axios from 'axios';\nimport cookie from 'react-cookies'\nimport jwt_decode from \"jwt-decode\";\n\nexport const API_BASE_URL = \"https://mexusapi.codingnome.dev\";\n\nexport const getUserId = async () => cookie.load('userId');\nexport const getUserRole = async () => cookie.load('userRole');\nexport const getUserNickName = async () => cookie.load('nickName');\nexport const logout = async () => cookie.remove('accessToken');\n\nexport const getHttp = async (url, config) => {\n    return await checkToken()\n        .then(async () => {\n            return await axios.get(API_BASE_URL + url, config)\n            //.catch(error => { console.log('error : ', error.response.data) });\n        });\n\n};\n\nexport const postHttp = async (url, body, config) => {\n    return await checkToken()\n        .then(async () => {\n            return await axios.post(API_BASE_URL + url, body, config)\n            //.catch(error => { console.log('error : ', error.response.data) });\n        })\n};\n\nexport const putHttp = async (url, body, config) => {\n    return await checkToken()\n        .then(async () => {\n            return await axios.put(API_BASE_URL + url, body, config)\n            //.catch(error => { console.log('error : ', error.response.data) });\n        })\n};\n\nexport const deleteHttp = async (url, config) => {\n    return await checkToken()\n        .then(async () => {\n            return await axios.delete(API_BASE_URL + url, config)\n            //.catch(error => { console.log('error : ', error.response.data) });\n        });\n};\n\nexport const setTokens = async (accessToken, refreshToken) => {\n    setAccessToken(accessToken);\n    setRefreshToken(refreshToken);\n};\n\nexport const checkLoginStatus = async () => {\n    let refreshToken = await cookie.load('refreshToken');\n    return refreshToken !== undefined;\n};\n\nconst checkToken = async () => {\n    let accessToken = await cookie.load('accessToken');\n    let refreshToken = await cookie.load('refreshToken');\n    if (refreshToken !== undefined) {\n        if (accessToken === undefined) {\n            await refreshAccessToken(refreshToken);\n            accessToken = await cookie.load('accessToken');\n        }\n        axios.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`;\n    } else\n        delete axios.defaults.headers.common['Authorization'];\n};\n\nconst refreshAccessToken = async (refreshToken) => {\n    return await axios.post(API_BASE_URL + \"/auth/refresh\", {refreshToken: refreshToken})\n        .then((response) => response.data.accessToken)\n        .then((token) => setAccessToken(token))\n        .catch(error => {\n            console.log('error : ', error.response.data)\n        });\n};\n\nconst setAccessToken = (accessToken) => {\n    let decodedToken = jwt_decode(accessToken);\n    const accessTokenExpires = new Date(decodedToken.exp * 1000);\n    accessTokenExpires.setMinutes(accessTokenExpires.getMinutes() - 1, 0, 0)\n    cookie.save('userId', decodedToken.sub,\n        {\n            path: '/',\n            expires: accessTokenExpires\n        });\n    cookie.save('userRole', decodedToken.roles,\n        {\n            path: '/',\n            expires: accessTokenExpires\n        });\n    cookie.save('nickName', decodedToken.nickName,\n        {\n            path: '/',\n            expires: accessTokenExpires\n        });\n    cookie.save('accessToken', accessToken,\n        {\n            path: '/',\n            expires: accessTokenExpires\n            //secure: true\n            //httpOnly: true\n        });\n};\nconst setRefreshToken = (refreshToken) => {\n    const refreshTokenExpires = new Date(jwt_decode(refreshToken).exp * 1000);\n    refreshTokenExpires.setMinutes(refreshTokenExpires.getMinutes() - 1, 0, 0);\n\n    cookie.save('refreshToken', refreshToken,\n        {\n            path: '/',\n            expires: refreshTokenExpires,\n            //secure: true\n            //httpOnly: true\n        });\n};","import React from 'react';\nimport '../css/TrainingCard.css';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport 'moment/locale/ko';\nimport { API_BASE_URL } from '../utils/authHttpWrapper';\n\nconst TrainingCard = (props) => {\n\n    const setDate = modifiedDate => {\n        let modifiedTime = new Date(modifiedDate);\n        let nowTime = moment();\n        let timeAmount = (nowTime - modifiedTime) / 1000;\n        let time = '';\n\n        if (timeAmount >= 60 * 60 * 24 * 365) time = (timeAmount / (60 * 60 * 24 * 365)).toFixed() + '년 전';\n        else if (timeAmount >= 60 * 60 * 24 * 30) time = (timeAmount / (60 * 60 * 24 * 30)).toFixed() + '달 전';\n        else if (timeAmount >= 60 * 60 * 24) time = (timeAmount / (60 * 60 * 24)).toFixed() + '일 전';\n        else if (timeAmount >= 60 * 60) time = (timeAmount / (60 * 60)).toFixed() + '시간 전';\n        else if (timeAmount >= 60) time = (timeAmount / (60)).toFixed() + '분 전';\n        else if (timeAmount >= 0) time = (timeAmount).toFixed() + '초 전';\n        return time;\n    };\n\n    return (\n        <div className='Video'>\n            <Link className='TrainingCardWrapper' to={\"/training/\" + props.training.trainingId}>\n                <img className='ThumbNail' src={API_BASE_URL + \"/thumbnail/\" + props.training.trainingId}\n                    position=\"relative\" opacity=\"0.5\" width=\"300\" height=\"190\" alt=\"\" />\n                <font className='VideoName'>\n                    {props.training.title}<br />\n                </font>\n                <Link className='Page' to={\"/page/\" + props.training.trainer}>\n                    <font className='Channel'>{props.training.trainer}<br /></font>\n                </Link>\n                <font className='Play'>\n                    {\"조회수 \" + props.training.views + \"회\"}\n                </font>\n                &nbsp;-&nbsp;\n                <font className='time'>\n                    {setDate(props.training.modifiedDate)}\n                </font>\n            </Link>\n        </div>\n    );\n};\n\nexport default TrainingCard;","import React from 'react';\nimport TrainingCard from './TrainingCard';\nimport '../css/Trainings.css'\n\nconst Trainings = (props) => {\n    return (\n        <div className='TrainingCardList'>\n            {props.trainings.map(training => <TrainingCard key={training.trainingId} training={training}/>)}\n        </div>\n    );\n};\n\nexport default Trainings;","import React, { useEffect, useState } from 'react';\nimport '../css/Main.css';\nimport { getHttp } from \"../utils/authHttpWrapper\";\nimport Trainings from \"../components/Trainings\";\n\nconst Main = (props) => {\n\n    const [trainings, setTrainings] = useState([]);\n\n    useEffect(() => {\n        getHttp(\"/trainings\")\n            .then(r => {\n                if (r.data._embedded !== undefined)\n                    setTrainings(r.data._embedded.trainingList)\n            }).catch(error => {\n                alert(error.response)\n            });\n    }, []);\n\n    return (\n        <div className='Trainings'>\n            <Trainings trainings={trainings} />\n        </div>\n    )\n};\n\nexport default Main;","import React, { useEffect, useState } from 'react';\nimport { API_BASE_URL } from '../utils/authHttpWrapper';\nimport '../css/SubscribeCard.css';\nimport { Link } from 'react-router-dom';\n\nconst SubscribeCard = (props) => {\n\n    const imgDefault = process.env.PUBLIC_URL + '/Gray.png'\n    const [subscribeImage, setSubscribeImage] = useState('');\n\n    useEffect(() => {\n        setSubscribeImage(API_BASE_URL + '/profile/' + props.subscribe.trainerId + '/image')\n        // eslint-disable-next-line\n    }, [])\n\n    const onImageError = () => {\n        setSubscribeImage(imgDefault);\n    }\n\n    return (\n        <Link className='Page' to={\"/page/\" + props.subscribe.trainerName}>\n            <div className='Subscribe'>\n                <img className='SubscribeImg' src={subscribeImage} onError={onImageError} alt={''} />\n                <text className='SubscribeName'>{props.subscribe.trainerName}</text>\n            </div>\n        </Link>\n    );\n};\n\nexport default SubscribeCard;","import React from 'react'\nimport SubscribeCard from './SubscribeCard';\n\nconst Subscribes = (props) => {\n    return (\n        <div>\n            {props.subscribes.map(subscribe => <SubscribeCard key={subscribe.trainerId} subscribe={subscribe}/>)}\n        </div>\n    );\n}\n\nexport default Subscribes;","import React, { useState, useEffect } from 'react';\nimport '../css/Profile.css';\nimport Trainings from '../components/Trainings';\nimport Subscribes from '../components/Subscribes';\nimport { Link } from 'react-router-dom';\nimport { getUserId, getUserNickName, postHttp, API_BASE_URL, putHttp, getHttp } from '../utils/authHttpWrapper';\n\n\nconst Profile = (props) => {\n    const [nickName, setNickName] = useState('?');\n    const [nickNameChange, setNickNameChange] = useState(false);\n    const [newNickName, setNewNickName] = useState('');\n    const imgDefault = process.env.PUBLIC_URL + '/Gray.png';\n    const [imgPreview, setImagePreview] = useState('');\n    const [imgUpload, setImgUpload] = useState('');\n    const [imgChanging, setImageChanging] = useState(false);\n    const [myTrainings, setMyTrainings] = useState([]);\n    const [myLikeTrainings, setMyLikeTrainings] = useState([]);\n    const [mySubscribes, setMySubscribes] = useState([]);\n    const [listState, setlistState] = useState(false);\n\n    // eslint-disable-next-line\n    useEffect(() => {\n        let nick = '?'\n        getUserNickName()\n            .then(r => {\n                nick = r\n                setNickName(r)\n            })\n            .then(() => getUserId())\n            .then(userId => setImgUpload(API_BASE_URL + '/profile/' + userId + '/image'))\n            .then(async () => {\n                await getHttp(\"/trainings\")\n                    .then(r => {\n                        if (r.data._embedded !== undefined) {\n                            let tList = r.data._embedded.trainingList\n                            let newtList = tList.filter(t => t.trainer === nick)\n                            setMyTrainings(newtList)\n                        }\n                    }).catch(error => {\n                        console.log(error.response.data.message)\n                    })\n                await getHttp(\"/training/likes\")\n                    .then(r => {\n                        setMyLikeTrainings(r.data);\n                    }).catch(error => {\n                        console.log(error.response.data.message)\n                    })\n                await getHttp(\"/subscribes\")\n                    .then(r => {\n                        setMySubscribes(r.data);\n                    }).catch(error => {\n                        console.log(error.response.data.message)\n                    })\n            })\n        // eslint-disable-next-line\n    }, [])\n\n    const onChangeNickName = e => {\n        setNewNickName(e.target.value);\n    }\n\n    const changeNickName = async () => {\n        if (nickNameChange === false) {\n            setNickNameChange(true);\n        }\n        else if (nickNameChange === true && newNickName !== '') {\n\n            await putHttp('/profile', {\n                nickName: newNickName\n            }).then(() => {\n                setNickNameChange(false);\n                setNickName(newNickName);\n            }).catch(error => {\n                console.log('error on component : ', error.response.data)\n            })\n        }\n        else if (nickNameChange === true && newNickName === '') {\n            setNickNameChange(false);\n        }\n    }\n\n    const onKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            changeNickName();\n        }\n    }\n\n    const onImageChanged = (e) => {\n        setImagePreview(URL.createObjectURL(e.target.files[0]))\n        setImgUpload(e.target.files[0])\n    }\n\n    const submitImage = async (e) => {\n        if (imgChanging === false) {\n            setImageChanging(true);\n        }\n        else {\n            setImageChanging(false);\n\n            const fd = new FormData();\n            let userId = await getUserId();\n\n            fd.append('image', imgUpload);\n            postHttp('/profile/' + userId + '/image', fd)\n                .then(res => {\n                    setImgUpload(API_BASE_URL + '/profile/' + userId + '/image');\n                })\n                .catch(error => {\n                    console.log(error.response);\n                });\n        }\n    }\n\n    const onImageError = () => {\n        setImgUpload(imgDefault);\n    }\n\n    const onChangelistState1 = () => {\n        setlistState(true);\n    }\n\n    const onChangelistState2 = () => {\n        setlistState(false);\n    }\n\n    return (\n        <div className='ProfileWrapper'>\n            <div className='ProfileInfo'>\n                <div>\n                    <img onError={onImageError} className='UserProfile' src={imgChanging ? imgPreview : imgUpload} alt={''}></img>\n                    {imgChanging ? <div><input className='ProfileImgInput' type='file' accept='image/jpg,impge/png,image/jpeg,image/gif' onChange={onImageChanged} alt={\"\"} /></div> : <br />}\n                    <button className='ProfileImgEditButton' onClick={submitImage}>프로필 편집</button>\n                </div>\n                <div className='NickNameInfo'>\n                    <div className='NickName'>{nickNameChange ?\n                        <input className='NickNameInput' onChange={onChangeNickName} onKeyPress={onKeyPress}\n                            placeholder={nickName} /> : nickName}</div>\n                    <button className='NickNameEditButton' onClick={changeNickName}>닉네임 편집</button>\n                </div>\n            </div>\n            <div className='MyArea'>\n                <div className='MyListArea'>\n                    <div className='ListTitles'>\n                        <div className='MyTrainingArea' onClick={onChangelistState2} style={listState ? { cursor:'pointer' } : { background: 'lightgray' }}>\n                            <text className=\"MyUploadTrainingListTitle\">내가 올린 운동</text>\n                            <Link to='/upload'><button className='UploadButton'>+</button></Link>\n                        </div>\n                        <div className='MyLikeTrainingArea' onClick={onChangelistState1} style={listState ? { background:'lightgray' } : { cursor:'pointer' }}>\n                            <text className=\"MyUploadTrainingListTitle\">내가 좋아요한 운동</text>\n                        </div>\n                    </div>\n                    <div className='MyTrainingList'>\n                        {listState ? <div className='MyTriningListBackground'><Trainings trainings={myLikeTrainings} /></div> : <div className='MyTriningListBackground'><Trainings trainings={myTrainings} /></div>}\n                    </div>\n                </div>\n                <div className='MySubscribeArea'>\n                    <div className='MySubscribeTitle'>\n                        <text className=\"MyUploadTrainingListTitle\">\n                            나의 구독 리스트\n                        </text>\n                    </div>\n                    <div className='MySubscribeListBackground'>\n                        <Subscribes subscribes={mySubscribes} />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Profile;","import React, { useState, useEffect } from 'react';\nimport '../css/MyComment.css';\nimport { postHttp, API_BASE_URL } from '../utils/authHttpWrapper'\n\nconst MyComment = (props) => {\n    const [commentBody, setCommentBody] = useState('');\n    const defaultImg = process.env.PUBLIC_URL + '/Gray.png'\n    const [myImg, setMyImg] = useState(API_BASE_URL+'/profile/'+props.userId+'/image')\n\n    const onChangeCommentBody = e => setCommentBody(e.target.value);\n\n    useEffect(() => {\n        setMyImg(API_BASE_URL+'/profile/'+props.userId+'/image')\n    }, [props.userId])\n\n    const inputComment = async () => {\n        if (commentBody !== '') {\n            await postHttp('/comments/' + props.trainingId, {\n                message: commentBody\n            }).catch(error => {\n                console.log('error on component : ', error.response.data)\n            });\n            setCommentBody('')\n        }\n        else {\n            alert('댓글 내용을 입력하세요.')\n        }\n\n        // props.history.push('/training/' + props.trainerId);\n\n        props.refresh()\n    };\n\n    const onImageError = () => {\n        setMyImg(defaultImg)\n    }\n\n    return (\n        <div className='MyCommentWrapper'>\n            <div className='Comment'>\n                <text>\n                    댓글\n                </text>\n            </div>\n            <div className='MyComment'>\n                <img className='MyProfile' src={myImg} onError={onImageError} alt=\"\" />\n                <textarea className='Input' placeholder=\"댓글입력\" value={commentBody} onChange={onChangeCommentBody} />\n                <button className='CommentButton' onClick={inputComment}>\n                    입력\n                </button>\n            </div>\n        </div>\n    );\n}\n\nexport default MyComment;","import React, { useEffect, useState } from 'react'\nimport '../css/VideoInfo.css'\nimport { deleteHttp, postHttp, API_BASE_URL } from '../utils/authHttpWrapper';\nimport { Link } from 'react-router-dom'\n\nconst VideoInfo = (props) => {\n    const [like, setLike] = useState(props.trainingInfo.likes)\n    const [subscribe, setSubscribe] = useState(props.trainingInfo.subscribe)\n    const imgDefault = process.env.PUBLIC_URL + '/Gray.png'\n    const [trainerImg, setTrainerImg] = useState(API_BASE_URL + '/profile/' + props.trainingInfo.trainerId + '/image')\n\n    useEffect(() => {\n        setTrainerImg(API_BASE_URL + '/profile/' + props.trainingInfo.trainerId + '/image')\n    }, [props.trainingInfo.trainerId])\n\n    useEffect(() => {\n        setLike(props.trainingInfo.likes)\n    }, [props.trainingInfo.likes])\n\n    useEffect(() => {\n        setSubscribe(props.trainingInfo.subscribe)\n    }, [props.trainingInfo.subscribe])\n\n    const addLike = () => {\n\n        if (props.trainingInfo.like === false) {\n            postHttp('/trainings/' + props.trainingId + '/like', {})\n                .then(() => props.getTrainingInfo())\n        } else {\n            deleteHttp('/trainings/' + props.trainingId + '/like')\n                .then(() => props.getTrainingInfo())\n        }\n    }\n\n    const ChangeSubscribe = async () => {\n        if (props.trainingInfo.subscribe === false) {\n            await postHttp('/trainer/' + props.trainingInfo.trainerId, {})\n                .then(async () => await props.getTrainingInfo())\n        } else {\n            await deleteHttp('/trainer/' + props.trainingInfo.trainerId)\n                .then(async () => await props.getTrainingInfo())\n        }\n    }\n\n    const onImageError = () => {\n        setTrainerImg(imgDefault)\n    }\n\n    return (\n        <div className='VideoInfos'>\n            <div className='NameLike'>\n                <div className='TrainingVideoName'>{props.trainingInfo.title}</div>\n                <div className='Like'>\n                    <button className={props.trainingInfo.like?'LikeButton':'nLikeButton'} onClick={addLike} />\n                    <text>{like}</text>\n                </div>\n                {/* <button className='InputButton'>+</button> */}\n            </div>\n            <div className='Count'>\n                <text>{'조회수 ' + props.trainingInfo.views + '회'}</text>\n                <text className='Date'>{props.trainingInfo.createdDate.toString().slice(0, 10)}</text>\n            </div>\n            <div className='ChannelInfo'>\n                <Link className='Page' to={\"/page/\" + props.trainingInfo.trainer}>\n                    <img className='Profile' src={trainerImg} onError={onImageError} alt=\"\" />\n                    <text className='ChannelName'>{props.trainingInfo.trainer}</text>\n                </Link>\n                <button className={props.trainingInfo.subscribe?'SubscribeButton':'nSubscribeButton'} onClick={ChangeSubscribe}>{subscribe ? '구독중' : '구독'}</button>\n            </div>\n            <div className='VideoExplain'>\n                <text>{props.trainingInfo.body}</text>\n            </div>\n            <hr />\n        </div>\n    )\n}\n\nexport default VideoInfo;","import React, { useState, useEffect } from 'react';\nimport '../css/Comment.css';\nimport { getUserId, putHttp, deleteHttp, API_BASE_URL } from '../utils/authHttpWrapper'\nimport moment from 'moment';\nimport 'moment/locale/ko';\nimport { Link } from 'react-router-dom'\n\nconst Comment = (props) => {\n\n    const [isModify, setIsModify] = useState(false);\n    const [modifiedComment, setModifiedComment] = useState('');\n    const imgDefault = process.env.PUBLIC_URL + '/Gray.png'\n    const [commenterImg, setCommenterImg] = useState(API_BASE_URL + '/profile/' + props.commenterId + '/image')\n\n    useEffect(() => {\n        setCommenterImg(API_BASE_URL + '/profile/' + props.commenterId + '/image')\n        console.log(props.commenterId)\n    }, [props.commenterId])\n\n    const onChangeModifedComment = e => setModifiedComment(e.target.value);\n\n    const onModifyComment = async () => {\n        let userId = await getUserId();\n        if (userId === props.comment.commenterId && isModify === false) {\n            setIsModify(true)\n        }\n        else if (userId === props.comment.commenterId && isModify === true && modifiedComment === '') {\n            setIsModify(false)\n        }\n        else if (userId === props.comment.commenterId && isModify === true && modifiedComment !== '') {\n            await putHttp('/comments/' + props.comment.commentId, {\n                message: modifiedComment\n            }).catch(error => {\n                console.log('error on component : ', error.response.data)\n            });\n            setIsModify(false)\n            setModifiedComment('')\n            props.refresh()\n        }\n        else {\n            alert('자신의 댓글만 수정 가능합니다.')\n        }\n    }\n\n    const onDeleteComment = async () => {\n        let userId = await getUserId();\n        if (userId === props.comment.commenterId) {\n            await deleteHttp('/comments/' + props.comment.commentId, {\n                message: modifiedComment\n            }).catch(error => {\n                console.log('error on component : ', error.response.data)\n            });\n            alert('삭제되었습니다.')\n            props.refresh()\n        }\n        else {\n            alert('자신의 댓글만 삭제 가능합니다.')\n        }\n    }\n\n    const onKeyPress = (e) => {\n        if (e.key === 'Enter') onModifyComment();\n    }\n\n    const onImageError = () => {\n        setCommenterImg(imgDefault)\n    }\n\n    const setDate = modifiedDate => {\n        let modifiedTime = new Date(modifiedDate);\n        let nowTime = moment();\n        let timeAmount = (nowTime - modifiedTime) / 1000;\n        let time = '';\n\n        if (timeAmount >= 60 * 60 * 24 * 365) time = (timeAmount / (60 * 60 * 24 * 365)).toFixed() + '년 전';\n        else if (timeAmount >= 60 * 60 * 24 * 30) time = (timeAmount / (60 * 60 * 24 * 30)).toFixed() + '달 전';\n        else if (timeAmount >= 60 * 60 * 24) time = (timeAmount / (60 * 60 * 24)).toFixed() + '일 전';\n        else if (timeAmount >= 60 * 60) time = (timeAmount / (60 * 60)).toFixed() + '시간 전';\n        else if (timeAmount >= 60) time = (timeAmount / (60)).toFixed() + '분 전';\n        else if (timeAmount >= 0) time = (timeAmount).toFixed() + '초 전';\n        return time;\n    };\n\n    return (\n        <div className='CommentList'>\n            <Link className='Page' to={\"/page/\" + props.comment.commenterId}>\n                <img className='MyProfile' src={commenterImg} onError={onImageError} alt=\"\" />\n            </Link>\n            <div className='CommentInfos'>\n                <div className='NameTime'>\n                    <Link className='Page' to={\"/page/\" + props.comment.commenterId}>\n                        <div className='CommentName'>{props.comment.commenterId}</div>\n                    </Link>\n                    &nbsp;-&nbsp;\n                        <text className='modifiedTime'>{setDate(props.modifiedDate)}</text>\n                </div>\n                <div className='CommentBody'>\n                    {isModify ? <input value={modifiedComment} placeholder={props.comment.message} onChange={onChangeModifedComment} onKeyPress={onKeyPress} /> : props.comment.message}\n                </div>\n                <button className='Modify' onClick={onModifyComment} >수정</button>\n                <button className='Delete' onClick={onDeleteComment} >삭제</button>\n            </div>\n        </div>\n    );\n};\n\nexport default Comment;","import React from \"react\"\n\nexport default function({ name, target }) {\n  if (!target) {\n    return <p>{`loading ${name} ...`}</p>\n  }\n  if (target instanceof Error) {\n    return (\n      <>\n        <p>{`There was an error while loading ${name}`}</p>\n        <font color=\"red\">{target.message}</font>\n      </>\n    )\n  }\n  return <></>\n}\n","export function getMediaStreamConstraints(facingMode, frameRate) {\n  return {\n    audio: false,\n    video: {\n      facingMode,\n      frameRate\n    }\n  }\n}\n\nexport function getConfidentPoses(poses, minPoseConfidence, minPartConfidence) {\n  return poses\n    .filter(({ score }) => score > minPoseConfidence)\n    .map(pose => ({\n      ...pose,\n      keypoints: pose.keypoints.filter(({ score }) => score > minPartConfidence)\n    }))\n}\n\nexport function drawKeypoints(ctx, keypoints) {\n  keypoints.forEach(({ position }) => {\n    const { x, y } = position\n    ctx.beginPath()\n    ctx.arc(x, y, 5, 0, 2 * Math.PI, false)\n    ctx.fillStyle = \"red\"\n    ctx.fill()\n  })\n}\n","import React, {useEffect, useRef, useState} from \"react\"\nimport PropTypes from \"prop-types\"\nimport Loading from \"./Loading\"\nimport useInputImage from \"../hooks/useInputImage\"\nimport useLoadPoseNet from \"../hooks/useLoadPoseNet\"\nimport {getConfidentPoses} from \"../util\"\n\nexport default function PoseNet({\n  style,\n  className,\n  facingMode,\n  frameRate,\n  input,\n  onEstimate,\n  inferenceConfig,\n  modelConfig,\n  minPoseConfidence,\n  minPartConfidence,\n  width,\n  height,\n  curFrame\n}) {\n  const [ctx, setCtx] = useState()\n  const net = useLoadPoseNet(modelConfig)\n  const [errorMessage, setErrorMessage] = useState()\n  const onEstimateRef = useRef()\n  const inferenceConfigRef = useRef()\n  onEstimateRef.current = onEstimate\n  inferenceConfigRef.current = inferenceConfig\n  const image = useInputImage({\n    input,\n    width,\n    height,\n    facingMode,\n    frameRate\n  })\n\n  useEffect(() => {\n    if (!net || !image || !ctx) return () => { }\n    if ([net, image].some(elem => elem instanceof Error)) return () => { }\n\n    let intervalId\n    let requestId\n    function cleanUp() {\n      clearInterval(intervalId)\n      cancelAnimationFrame(requestId)\n    }\n\n    async function estimate() {\n      try {\n        ctx.drawImage(image, 0, 0, width, height)\n        if (curFrame !== -1) {\n          const poses = await net.estimatePoses(image, inferenceConfigRef.current)\n          const confidentPoses = getConfidentPoses(\n            poses,\n            minPoseConfidence,\n            minPartConfidence\n          )\n          onEstimateRef.current(confidentPoses)\n          // confidentPoses.forEach(({ keypoints }) => drawKeypoints(ctx, keypoints))\n        }\n      } catch (err) {\n        cleanUp()\n        setErrorMessage(err.message)\n      }\n    }\n\n    if (frameRate) {\n      intervalId = setInterval(estimate, Math.round(1000 / frameRate))\n      return cleanUp\n    }\n\n    function animate() {\n      estimate()\n      requestId = requestAnimationFrame(animate)\n    }\n    requestId = requestAnimationFrame(animate)\n\n    return cleanUp\n  }, [\n    ctx,\n    net,\n    image,\n    width,\n    height,\n    frameRate,\n    minPartConfidence,\n    minPoseConfidence,\n    curFrame\n  ])\n\n  return (\n    <>\n      <Loading name=\"model\" target={net} />\n      <Loading name=\"input\" target={image} />\n      <font color=\"red\">{errorMessage}</font>\n      <canvas\n        style={style}\n        className={className}\n        ref={c => {\n          if (c) {\n            setCtx(c.getContext(\"2d\"))\n          }\n        }}\n        width={width}\n        height={height}\n      />\n    </>\n  )\n}\n\nPoseNet.propTypes = {\n  /** canvas style */\n  // eslint-disable-next-line react/forbid-prop-types\n  style: PropTypes.object,\n  /** canvas className */\n  className: PropTypes.string,\n  /** @see https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints/facingMode  */\n  facingMode: PropTypes.string,\n  /** First of all frameRate is parameter of [getUserMedia()](https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia)\n   *  see [MediaTrackConstraints.frameRate](https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints/frameRate)\n   *  <br/>\n   *  Second frameRate affects how often estimation occurs. react-posenet internally do <br/>\n   *  [setInterval](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setInterval)(() => { estimatePose() } , (1000 / framerate))\n   *  to estimate image continuously. <br/>\n   *  If frameRate is undefined react-posnet use [requestAnimationFrame](https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame) */\n  frameRate: PropTypes.number,\n  /**\n   * the input image to feed through the network. <br/>\n   * If input is not specified react-posenet try to [getUserMedia](https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia)<br/>\n   * @see [tfjs-posenet document](https://github.com/tensorflow/tfjs-models/tree/master/posenet#params-in-estimatesinglepose)\n   */\n  input: PropTypes.element,\n  /**\n   * gets called after estimation. [poses](https://github.com/tensorflow/tfjs-models/tree/master/posenet#keypoints) is a passed parameter\n   */\n  onEstimate: PropTypes.func,\n  /**\n   * If you want swtich between single / multi pose estimation.<br/>\n   * use decodingMethod [please check this code](https://github.com/tensorflow/tfjs-models/blob/master/posenet/demos/camera.js#L392) <br/>\n   * {decodingMethod: \"single-person\"} / {decodingMethod: \"multi-person\"}\n   * @see [tfjs-posenet documentation](https:/github.com/tensorflow/tfjs-models/tree/master/posenet#params-in-estimatemultipleposes)\n   */\n  inferenceConfig: PropTypes.shape({\n    decodingMethod: PropTypes.string,\n    flipHorizontal: PropTypes.bool,\n    maxDetections: PropTypes.number,\n    scoreThreshold: PropTypes.number,\n    nmsRadius: PropTypes.number\n  }),\n  /** @see [tfjs-posenet documentation](https://github.com/tensorflow/tfjs-models/tree/master/posenet#config-params-in-posenetload) */\n  modelConfig: PropTypes.shape({\n    architecture: PropTypes.string,\n    outputStride: PropTypes.number,\n    inputResolution: PropTypes.oneOfType([PropTypes.number, PropTypes.object]),\n    quantBytes: PropTypes.number\n  }),\n  /** minimum confidence constraint for pose */\n  minPoseConfidence: PropTypes.number,\n  /** minimum confidence constraint for each [part](https://github.com/tensorflow/tfjs-models/tree/master/posenet#keypoints) */\n  minPartConfidence: PropTypes.number,\n  /** canvas width */\n  width: PropTypes.number,\n  /** canvas height */\n  height: PropTypes.number\n}\n\nPoseNet.defaultProps = {\n  style: {},\n  className: \"\",\n  facingMode: \"user\",\n  frameRate: undefined,\n  input: undefined,\n  onEstimate: () => { },\n  inferenceConfig: {},\n  modelConfig: {},\n  minPoseConfidence: 0.1,\n  minPartConfidence: 0.5,\n  width: 600,\n  height: 600\n}\n","import { useState, useEffect } from \"react\"\nimport * as posenet from \"@tensorflow-models/posenet\"\nimport to from \"await-to-js\"\n\nexport default function(modelConfig = {}) {\n  const modelConfigString = JSON.stringify(modelConfig)\n  const [net, setNet] = useState(null)\n  useEffect(() => {\n    async function loadNet() {\n      const [err, poseNet] = await to(\n        posenet.load(JSON.parse(modelConfigString))\n      )\n      if (err) {\n        setNet(err)\n        return\n      }\n      setNet(poseNet)\n    }\n    loadNet()\n  }, [modelConfigString])\n  return net\n}\n","import { useState, useEffect } from \"react\"\nimport { useUserMediaVideo } from \"use-user-media\"\nimport { getMediaStreamConstraints } from \"../util\"\n\nexport default function useInputImage({\n  input,\n  width,\n  height,\n  facingMode,\n  frameRate\n}) {\n  const [image, setImage] = useState()\n  const userMediaDisabled = typeof input === \"object\"\n  const constraints = userMediaDisabled\n    ? { video: false, audio: false }\n    : getMediaStreamConstraints(facingMode, frameRate)\n  const [userMediaError, video] = useUserMediaVideo(constraints)\n\n  useEffect(() => {\n    if (userMediaDisabled) {\n      input.width = width\n      input.height = height\n      setImage(input)\n      return\n    }\n    if (userMediaError) {\n      setImage(userMediaError)\n      return\n    }\n    if (video) {\n      video.width = width\n      video.height = height\n      setImage(video)\n    }\n  }, [userMediaDisabled, userMediaError, height, input, video, width])\n  return image\n}\n","export default async function cosineSimilarity(trainer, user) {\n    const v1 = await getVector(trainer);\n    const v2 = await getUserVector(user);\n\n    var score = await getScore(v1, v2) * 100 / 8;\n    console.log(score);\n    return score;\n}\n\nfunction getScore(v1, v2) {\n    var score = cosine(v1, v2);\n    return score;\n}\n\nfunction cosine(v1, v2) {\n    var score = 0;\n\n    for (var i = 0; i < 8; i++) {\n        score += ((v1[i].x * v2[i].x) + (v1[i].y * v2[i].y)) / (getWeight(v1[i]) * getWeight(v2[i]));\n    }\n    return score;\n}\n\nfunction getWeight(vector) {\n    return Math.sqrt(Math.pow(vector.x, 2) + Math.pow(vector.y, 2));\n}\n\nfunction getVector(json) {\n    const keyPoint = json.keyPoint;\n    var vector = [];\n\n    for (var i = keyPoint.length - 1; i >= 7; i--) {\n        if (i === 12 || i === 11) {\n            continue;\n        }\n        var point = {\n            \"x\": parseFloat(keyPoint[i].x) - parseFloat(keyPoint[i - 2].x),\n            \"y\": parseFloat(keyPoint[i].y) - parseFloat(keyPoint[i - 2].y)\n        };\n        vector.push(point);\n    }\n    return vector;\n}\n\nasync function getUserVector(json) {\n    const keyPoint = json.keypoints;\n    var vector = [];\n    \n    for (var i = keyPoint.length - 1; i >= 7; i--) {\n        if (i === 12 || i === 11) {\n            continue;\n        }\n        var point = {\n            \"x\": parseFloat(keyPoint[i].position.x) - parseFloat(keyPoint[i - 2].position.x),\n            \"y\": parseFloat(keyPoint[i].position.y) - parseFloat(keyPoint[i - 2].position.y)\n        };\n        vector.push(point);\n    }\n    return vector;\n}","import React, {useEffect, useState} from 'react';\nimport '../css/Player.css';\nimport ReactPlayer from 'react-player';\nimport PoseNet from '../utils/posenet/components/PoseNet'\n//import mockData from '../utils/mockData'\nimport cosineSimilarity from '../utils/cosineSimilarity'\nimport {getHttp} from '../utils/authHttpWrapper';\n\n//const fLen = mockData.frames.length;\nconst delayFrame = -2;\nconst frameRate = 30;\nconst minPoseConfidence = 0;\n\nfunction Player(props) {\n    const [curFrame, setCurFrame] = useState(-1);\n    const [player, setPlayer] = useState();\n    const [playing, setPlaying] = useState(false);\n    const [score, setScore] = useState(0.0);\n    const [feedbackColor, setFeedbackColor] = useState('red');\n    const [mockData, setMockData] = useState([]);\n    const [fLen, setFLen] = useState(0);\n    const [playedSeconds, setPlayedSeconds] = useState();\n\n    useEffect(() => {\n        getHttp(\"/trainings/\" + props.trainingId + \"/poses\")\n            .then(res => {\n                setMockData(res.data);\n                return res.data.frames.length\n            })\n            .then(r => setFLen(r))\n    }, [props.trainingId]);\n\n    useEffect(() => {\n        if (0 <= score && score < 60) {\n            setFeedbackColor('red');\n        } else if (60 <= score && score < 88) {\n            setFeedbackColor('yellow');\n        } else {\n            setFeedbackColor('green');\n        }\n    }, [score]);\n\n    async function estimate(curFrame, setState, a) {\n        var frame = curFrame + delayFrame;\n        if (a[0] != null && curFrame >= 0) {\n            try {\n                if (mockData.frames[frame].keyPoint.length === 17 && a[0].keypoints.length === 17) {\n                    cosineSimilarity(mockData.frames[frame], a[0])\n                        .then(score => setScore(score));\n                    console.log(score);\n                } else {\n                    console.log(\"전신이 나와야합니다.\");\n                }\n            } catch (e) {\n                console.log(\"전신이 나와야합니다.\");\n            }\n        }\n        setState(-1);\n    }\n\n    const onProgress = (e) => {\n        setCurFrame(Math.floor(fLen * e.played));\n        setPlayedSeconds(e.playedSeconds)\n    };\n\n    const onPause = (e) => {\n        setPlaying(false);\n    };\n    const onPlay = (e) => {\n        setPlaying(true);\n        player.seekTo(playedSeconds);\n    };\n\n    const onSeek = (e) => {\n        setPlayedSeconds(e);\n        player.seekTo(e)\n    };\n\n    function onBuffer() {\n        setPlaying(false);\n    }\n    function onBufferEnd() {\n        setPlaying(true);\n    }\n    return (\n        <div style={{border: \"10px solid \"+ feedbackColor, boxShadow: \"0 -5px 0 1px \"+ feedbackColor +\" inset\"}}>\n            <ReactPlayer\n                //id=\"player\"\n                style={{float: \"left\", zIndex:9999, padding:-10}}\n                url={\"https://mexusapi.codingnome.dev/streaming/training/\"+ props.trainingId + \"/video\"} playing controls\n                width=\"50%\"\n                height=\"50%\"\n                onPlay={onPlay}\n                onPause={onPause}\n                onSeek={onSeek}\n                onBuffer={onBuffer}\n                onBufferEnd={onBufferEnd}\n                progressInterval={1000 / 10}\n                onProgress={onProgress}\n                // eslint-disable-next-line\n                playing={playing}\n            />\n            <ReactPlayer\n                style={{float: \"left\", zIndex:9999, padding:0}}\n                className=\"shape\"\n                ref={p => setPlayer(p)}\n                url={'https://mexusapi.codingnome.dev/streaming/training/' + props.trainingId + '/shape'} playing\n                width=\"50%\"\n                height=\"50%\"\n                // eslint-disable-next-line\n                playing={playing}\n            />\n            <PoseNet\n                className=\"cam\"\n                style={{zIndex: \"-1\"}}\n                onEstimate={(a) => estimate(curFrame, setCurFrame, a)}\n                frameRate={frameRate}\n                flipHorizontal={true}\n                //width={}\n                height={340}\n                minPoseConfidence={minPoseConfidence}\n                curFrame={curFrame}\n            />\n            <div style={{fontSize: \"30px\",width:\"100%\",display:\"flex\",justifyContent: \"center\"}}></div>\n            <div style={{background: feedbackColor,fontSize: \"3vw\",width:\"16%\", left:\"42%\",top:\"10%\", position:\"absolute\", textAlign:\"center\"}}>\n                {Math.floor(score).toString().padStart(3,' ')+\"/100\"}\n            </div>\n        </div>\n\n\n    );\n}\n\nexport default Player;","import React, {useEffect, useState} from 'react';\nimport MyComment from '../components/MyComment.js'\nimport VideoInfo from '../components/VideoInfo.js'\nimport { getHttp, getUserId } from \"../utils/authHttpWrapper\";\nimport Comment from \"../components/Comment\";\nimport {now} from 'moment';\nimport Player from '../components/Player'\n\nconst Training = (props) => {\n    const [trainingInfo, setTrainingInfo] = useState({\n        title: '',\n        trainerId: '',\n        trainer: '',\n        body: '',\n        createdDate: new Date(now)\n    });\n    const [comments, setComments] = useState([]);\n    const [userId, setUserId] = useState('');\n\n    useEffect(() => {\n        getTrainingInfo();\n        getUserId()\n            .then(r => setUserId(r));\n        // eslint-disable-next-line\n    }, [props.match.params.trainingId]);\n\n    const refreshComments = () => {\n        getHttp(\"/trainings/\" + props.match.params.trainingId + '/comments')\n            .then(response => {\n                if (response.data.page.totalElements !== 0)\n                    setComments(response.data._embedded.commentList)\n            })\n    };\n\n    const getTrainingInfo = async () => {\n        getHttp(\"/trainings/\" + props.match.params.trainingId)\n            .then(response => setTrainingInfo(response.data))\n            .then(async () => await getHttp(\"/trainings/\" + props.match.params.trainingId + \"/comments\"))\n            .then(response => {\n                if (response.data.page.totalElements !== 0)\n                    setComments(response.data._embedded.commentList)\n            })\n    }\n\n    return (\n        <div>\n            <Player trainingId={props.match.params.trainingId}/>\n            <VideoInfo trainingInfo={trainingInfo} trainingId={props.match.params.trainingId} getTrainingInfo={getTrainingInfo} />\n            <MyComment trainingId={props.match.params.trainingId} userId={userId} refresh={refreshComments} />\n            {comments.map((comment, index) => <Comment key={index} commentId={props.match.params.commentId} comment={comment} commenterId={comment.commenterId} modifiedDate={comment.modifiedDate} refresh={refreshComments} />)}\n        </div>\n    );\n};\n\nexport default Training;","import React from 'react';\nimport '../css/SearchVideo.css';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport 'moment/locale/ko';\nimport { API_BASE_URL } from '../utils/authHttpWrapper';\n\nconst SearchVideo = (props) => {\n\n    const setDate = modifiedDate => {\n        let modifiedTime = new Date(modifiedDate);\n        let nowTime = moment();\n        let timeAmount = (nowTime - modifiedTime) / 1000;\n        let time = '';\n\n        if (timeAmount >= 60 * 60 * 24 * 365) time = (timeAmount / (60 * 60 * 24 * 365)).toFixed() + '년 전';\n        else if (timeAmount >= 60 * 60 * 24 * 30) time = (timeAmount / (60 * 60 * 24 * 30)).toFixed() + '달 전';\n        else if (timeAmount >= 60 * 60 * 24) time = (timeAmount / (60 * 60 * 24)).toFixed() + '일 전';\n        else if (timeAmount >= 60 * 60) time = (timeAmount / (60 * 60)).toFixed() + '시간 전';\n        else if (timeAmount >= 60) time = (timeAmount / (60)).toFixed() + '분 전';\n        else if (timeAmount >= 0) time = (timeAmount).toFixed() + '초 전';\n        return time;\n    };\n\n    return (\n        <div className='Search'>\n            <Link className='SearchVideo' to={'/training/'+props.training.trainingId} >\n                <div className='SearchVideoWrapper'>\n                    {/* 나중에 List로 구현 */}\n\n                    <img className=\"SearchVideoImage\"\n                        src={API_BASE_URL + \"/thumbnail/\" + props.training.trainingId}\n                        alt='' />\n                    <div className='SearchVideoInfos'>\n                        <font className='SearchVideoName'>\n                            {props.training.title}<br />\n                        </font>\n                        <Link className='Page' to={\"/page/\" + props.training.trainer}>\n                            <font className='SearchChannelName'>{props.training.trainer}<br /></font>\n                        </Link>\n                        <div className='InfoDate'>\n                            <font className='SearchVideoInfo'>{\"조회수 \" + props.training.views + \"회\"}</font>\n                            &nbsp;-&nbsp;\n                            <font className='SrarchVideoInfo'>{setDate(props.training.modifiedDate)}</font>\n                        </div>\n                        <font className='SearchVideoBody'>\n                            {props.training.body}\n                        </font>\n                    </div>\n                </div>\n            </Link>\n        </div>\n    );\n}\n\nexport default SearchVideo;","import React from 'react';\nimport SearchVideo from './SearchVideo'\n\nconst SearchVideoList = (props) => {\n    return (\n        <div className='SearchVideoList'>\n            {props.searchs.map(search => <SearchVideo key={search.trainingId} training={search} />)}\n        </div>\n    );\n}\n\nexport default SearchVideoList;","import React, { useEffect, useState } from 'react';\nimport SearchVideoList from '../components/SearchVideoList';\nimport '../css/Search.css';\nimport { getHttp } from '../utils/authHttpWrapper';\n\nconst Search = (props) => {\n\n    const [searchs, setSearchs] = useState([]);\n\n    useEffect(() => {\n        let searchStr = props.location.search.slice(7)\n        console.log(searchStr)\n        getHttp('/trainings?search=' + searchStr)\n            .then(r => {\n                if (r.data._embedded !== undefined)\n                    setSearchs(r.data._embedded.trainingList)\n                console.log(searchs)\n            }).catch(e => {\n                console.log(e.response.data.message)\n            });\n        // eslint-disable-next-line\n    }, [props.location.search])\n\n    return (\n        <div className='SearchWrapper'>\n            <div className='SearchVideoList'>\n                <SearchVideoList searchs={searchs} />\n            </div>\n        </div>\n    );\n}\n\nexport default Search;","import React, { useEffect, useState } from 'react';\nimport '../css/SignUp.css';\nimport { checkLoginStatus, getHttp, getUserId, postHttp, setTokens } from '../utils/authHttpWrapper'\n\nimport { Link, withRouter } from 'react-router-dom';\n\nconst SignUp = (props) => {\n    const [id, setId] = useState(\"\");\n    const [chkId, setChkId] = useState(\"\");\n    const [nick, setNick] = useState(\"\");\n    const [chkNick, setChkNick] = useState(\"\");\n    const [pw, setPw] = useState(\"\");\n    const [rePw, setRePw] = useState(\"\");\n    const [chkPw, setChkPw] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [chkEmail, setChkEmail] = useState(\"\");\n    const logo = process.env.PUBLIC_URL + '/logo.png';\n\n    const onChangeId = e => setId(e.target.value);\n    const onChangeNick = e => setNick(e.target.value);\n    const onChangePw = e => setPw(e.target.value);\n    const onChangeRepw = e => setRePw(e.target.value);\n    const onChangeEmail = e => setEmail(e.target.value);\n\n    useEffect(() => {\n        redirectHome();\n        setChkId('❌');\n        setChkNick('❌');\n        // eslint-disable-next-line\n    }, []);\n\n    useEffect(() => {\n        if (pw.length < 1 || rePw.length < 1) {\n            setChkPw('❌')\n            // 비밀번호가 같다면 일치\n        } else if (pw === rePw) {\n            setChkPw('✅')\n            // 비밀번호가 같지 않다면 불일치\n        } else {\n            setChkPw('❌')\n        }\n    }, [pw, rePw]);\n\n    useEffect(() => {\n        const emailRegExp = /^[\\w-]+(\\.[\\w-]+)*@([a-z0-9-]+(\\.[a-z0-9-]+)*?\\.[a-z]{2,6}|(\\d{1,3}\\.){3}\\d{1,3})(:\\d{4})?$/;\n        if (email.match(emailRegExp)) {\n            setChkEmail(\"✅\")\n        } else {\n            setChkEmail(\"❌\")\n        }\n    }, [email]);\n\n    const signUp = async () => {\n        let responseData = await postHttp('/auth/signup', {\n            id: id,\n            password: pw,\n            nickName: nick,\n            email: email\n        }).catch(error => {\n            console.log('error on component : ', error.response.data)\n        });\n        if (responseData !== undefined) {\n            await setTokens(responseData.data.accessToken, responseData.data.refreshToken);\n            let userId = await getUserId();\n            alert(userId + \"님 반갑습니다.\");\n            props.setIsLogin(true)\n            props.history.push('/')\n        }\n    };\n\n    const checkNick = async () => {\n        let res = await getHttp('/auth/checkNickName/' + nick)\n            .catch(e => setChkNick(\"❌\"));\n        if (res !== undefined)\n            if (res.status === 200)\n                setChkNick(\"✅\");\n            else if (res.status === 202)\n                setChkNick(\"❌\");\n    };\n\n    const checkId = async () => {\n        let res = await getHttp('/auth/checkid/' + id)\n            .catch(e => setChkId(\"❌\"));\n        if (res.status === 200)\n            setChkId(\"✅\");\n        else if (res.status === 202)\n            setChkId(\"❌\");\n    };\n    const redirectHome = async () => {\n        let status = await checkLoginStatus();\n        if (status) {\n            alert(\"이미 로그인된 상태입니다.\");\n            props.history.push('/')\n        }\n    };\n\n    return (\n        <div className='SignUpWrapper'>\n            <Link to='/'>\n                <img className='MainButton' src={logo} alt={''} />\n            </Link>\n            <div>\n                <input className='NickIdInput' placeholder='닉네임' value={nick} onChange={onChangeNick} />{chkNick}\n                <button className='DuplicateButton' onClick={checkNick}> 닉네임<br />중복확인</button>\n                <div>\n                    <input className='NickIdInput' placeholder='아이디' value={id} onChange={onChangeId} />{chkId}\n                    <button className='DuplicateButton' onClick={checkId}> ID<br />중복확인</button>\n                </div>\n                <input className='TextInput' placeholder='비밀번호' value={pw} type=\"password\" onChange={onChangePw} />\n                <div>\n                    <input className='PwEmailInput' placeholder='비밀번호 확인' value={rePw} type=\"password\" onChange={onChangeRepw} />{chkPw}\n                </div>\n                <input className='PwEmailInput' placeholder='이메일' type='email' value={email} onChange={onChangeEmail} />{chkEmail}\n                <div>\n                    <button className='SignInAndLogInButton' onClick={signUp}\n                        disabled={chkPw !== '✅' || chkEmail !== '✅' || chkId !== '✅' || chkNick !== '✅'}>\n                        회원가입 후 로그인\n                </button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default withRouter(SignUp);","import React, { useEffect, useState } from 'react';\nimport '../css/LogIn.css';\nimport { Link, withRouter } from 'react-router-dom';\nimport { checkLoginStatus, getUserId, postHttp, setTokens } from \"../utils/authHttpWrapper\";\n\n\nconst LogIn = (props) => {\n    const [id, setId] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const onChangeId = e => setId(e.target.value);\n    const onChangePawword = e => setPassword(e.target.value);\n    const logo = process.env.PUBLIC_URL + '/logo.png';\n\n    useEffect(() => {\n        redirectHome();\n        // eslint-disable-next-line\n    }, []);\n    const redirectHome = async () => {\n        let status = await checkLoginStatus();\n        if (status) {\n            alert(\"이미 로그인된 상태입니다.\");\n            props.history.push('/')\n        }\n    };\n    const signIn = async () => {\n        let responseData = await postHttp('/auth/signin', {\n            id: id,\n            password: password,\n        }).catch(error => {\n            alert(error.response.data.message)\n        });\n        if (responseData !== undefined) {\n            await setTokens(responseData.data.accessToken, responseData.data.refreshToken);\n            let userId = await getUserId();\n            alert(userId + \"님 반갑습니다.\");\n            props.setIsLogin(true)\n            props.history.push('/')\n        }\n    };\n\n    const onKeyPress = (e) => {\n        if (e.key === 'Enter') signIn();\n    }\n\n    return (\n        <div className='LoginWrapper'>\n            <Link to='/'>\n                <img className='MainButton' src={logo} alt={''} />\n            </Link>\n            <div>\n                <input className='TextInput' value={id} placeholder='아이디' onChange={onChangeId} onKeyPress={onKeyPress} />\n            </div>\n            <input className='TextInput' value={password} placeholder='비밀번호' type='password' onChange={onChangePawword} onKeyPress={onKeyPress} />\n            <div>\n            <button className='LogInButton' disabled={id === '' || password === ''} onClick={signIn} > 로그인</button>\n            </div>\n            <br />\n            <Link to='/signup'>\n                <button className='SignInButton'> 회원가입</button>\n            </Link>\n        </div>\n    );\n};\n\nexport default withRouter(LogIn);\n","import React from 'react';\nimport ReactLoading from 'react-loading';\n\nfunction Loader({type, color, message}) {\n  return (\n    <div className=\"contentWrap\">\n      <div style={{\n        position: \"fixed\",\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\"\n      }}>\n        <h2>{message}</h2>\n        <h2>잠시만 기다려주세요.</h2>\n        <ReactLoading\n          type={type}\n          color={color}\n          height={'80%'}\n          width={'80%'} />\n      </div>\n    </div>\n  );\n}\n\nexport default Loader;","import React, { useEffect, useState } from 'react';\nimport { postHttp } from '../utils/authHttpWrapper';\nimport '../css/Upload.css';\nimport Loader from '../utils/Loader';\n\nconst Upload = (props) => {\n\n    const [uploadAvailable, setUploadAvailable] = useState(false);\n    const [video, setVideo] = useState('');\n    const [thumbnail, setThumbnail] = useState('');\n    const [videoName, setVideoName] = useState(\"\");\n    const [videoExplain, setVideoExplain] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        if (video === '' || thumbnail === \"\" || videoName === \"\" || videoExplain === \"\") {\n            setUploadAvailable(false);\n        } else {\n            setUploadAvailable(true);\n        }\n    }, [video, thumbnail, videoName, videoExplain]);\n\n    // 영상(1)과 썸네일(2) 업로드 추후에 진행\n\n    const changeVideoName = e => setVideoName(e.target.value);\n    const changeVideoExplain = e => setVideoExplain(e.target.value);\n\n\n    const upload = async () => {\n        setLoading(true);\n        let tID;\n        let uploadVideo = await postHttp('/trainings', {\n            title: videoName,\n            body: videoExplain\n        }).then(async response => {\n            let arr = response.data._links.self.href.split('/');\n            tID = arr[arr.length - 1];\n            const fd = new FormData();\n            // console.log(fd)\n            fd.append('image', thumbnail)\n            await postHttp('/thumbnail/' + tID, fd)\n                .then(async response => {\n                    const fd = new FormData();\n                    fd.append('video', video)\n                    await postHttp('/upload/trainings/' + tID, fd)\n                        .catch(error => {\n                            console.log('error on video : ', error.response)\n                        })\n                    console.log(uploadVideo);\n                }).catch(error => {\n                    console.log('error on thumbnail : ', error.response)\n                })\n        }).catch(error => {\n            console.log('error on title, body : ', error.response)\n        })\n        // if (uploadVideo !== undefined) {         자꾸 undefined 뜨길래 일딴 빼놧다\n            setLoading(false)\n            alert(\"<\" + videoName + \"> 업로드 되었습니다.\");\n            props.history.push('/mypage')\n        // }\n    }\n\n    const UploadVideo = (e) => {\n        setVideo(e.target.files[0])\n    }\n\n    const UploadThumbnail = (e) => {\n        setThumbnail(e.target.files[0])\n    }\n\n    if (loading) return <Loader type=\"spin\" color=\"black\" message={'업로드 중입니다...'} />;\n\n    return (\n        <div className='UploadWrapper'>\n            <input className='VideoUpload' type='file' accept='.mp4' onChange={UploadVideo} />  {/** 업로드할 영상을 선택해주세요 */}\n            <input className='ThumbNailUpload' type='file' accept='image/jpg,impge/png,image/jpeg,image/gif' onChange={UploadThumbnail} />   {/** 대표사진을 선택해주세요. */}\n            <br />\n            <input className='UploadTitle' placeholder='영상 제목 입력' onChange={changeVideoName} />\n            <br />\n            <textarea className='UploadBody' placeholder='내용을 입력해주세요.' onChange={changeVideoExplain} />\n            <br />\n            <button className='VideoUploadButton' disabled={!uploadAvailable} onClick={upload}>\n                영상 올리기\n            </button>\n        </div>\n    );\n}\n\nexport default Upload;","import React, { useState, useEffect } from 'react';\nimport '../css/Profile.css';\nimport Trainings from '../components/Trainings';\nimport { API_BASE_URL, getHttp } from '../utils/authHttpWrapper';\nimport '../css/OthersProfile.css';\n\n\nconst OthersProfile = (props) => {\n    const imgDefault = process.env.PUBLIC_URL + '/Gray.png';\n    const [profileImg, setProfileImg] = useState(props.profileImg);\n    const [myTrainings, setMyTrainings] = useState([]);\n\n    useEffect(() => {\n        let nick = '?'\n        nick = props.match.params.nickName;\n        setProfileImg(API_BASE_URL + '/profile/' + nick + '/image')\n        getHttp(\"/trainings\")\n            .then(r => {\n                if (r.data._embedded !== undefined) {\n                    let tList = r.data._embedded.trainingList\n                    let newtList = tList.filter(t => t.trainer === nick)\n                    setMyTrainings(newtList)\n                }\n            }).catch(error => {\n                console.log(error.response.data.message)\n            })\n        // eslint-disable-next-line\n    }, [])\n\n    const onImageError = () => {\n        setProfileImg(imgDefault);\n    }\n\n    return (\n        <div className='ProfileWrapper'>\n            <div className='ProfileInfo'>\n                <div>\n                    <img onError={onImageError} className='UserProfile' src={profileImg} alt={''}></img>\n                </div>\n                <div className='NickNameInfo'>\n                    <div>\n                        <div className='NickName'>{props.match.params.nickName}</div>\n                    </div>\n                </div>\n            </div>\n            <div className='OthersTrainingArea'>\n                <text className=\"MyUploadTrainingListTitle\">\n                    올린 운동\n                        </text>\n                <div className='OthersUploadTriningListBackground'>\n                    <Trainings trainings={myTrainings} />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default OthersProfile;","import React, {useEffect, useState} from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport TopBar from './components/TopBar'\nimport Main from './pages/Main'\nimport MyPage from './pages/Profile'\nimport Training from './pages/Training';\nimport Search from './pages/Search';\nimport SignUp from './pages/SignUp';\nimport LogIn from './pages/LogIn';\nimport {checkLoginStatus} from \"./utils/authHttpWrapper\";\nimport Upload from './pages/Upload';\nimport OthersProfile from './pages/OthersProfile';\n\nfunction App() {\n    const [loginStatus, setLoginStatus] = useState(false);\n\n    useEffect(() => {\n        checkLogin()\n        // eslint-disable-next-line\n    }, []);\n\n    const checkLogin = async () => {\n        let status = await checkLoginStatus();\n        setLoginStatus(status)\n    };\n\n    return (\n        <Router basename={process.env.PUBLIC_URL}>\n            <TopBar loginStatus={loginStatus}/>\n            <Switch>\n                <Route exact path='/' component={Main}/>\n                <Route path='/training/:trainingId' component={Training}/>\n                <Route path='/mypage' component={MyPage}/>\n                <Route path='/search' component={Search}/>\n                <Route path='/login' render={() => <LogIn setIsLogin={setLoginStatus}/>}/>\n                <Route path='/signup' render={() => <SignUp setIsLogin={setLoginStatus}/>}/>\n                <Route path='/upload' component={Upload}/>\n                <Route path='/page/:nickName' component={OthersProfile}/>\n            </Switch>\n        </Router>\n    );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport Main from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Main/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}