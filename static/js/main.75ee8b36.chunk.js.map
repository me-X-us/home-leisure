{"version":3,"sources":["components/TopBar.js","utils/authHttpWrapper.js","components/TrainingCard.js","components/Trainings.js","pages/Main.js","components/SearchVideoList.js","pages/ProfileOfTrainer.js","components/MyComment.js","components/VideoInfo.js","components/Comment.js","pages/Training.js","components/Filter.js","pages/Search.js","pages/SignUp.js","pages/LogIn.js","pages/Upload.js","App.js","serviceWorker.js","index.js"],"names":["withRouter","props","useState","searchString","setSearchString","search","history","push","className","to","value","onChange","e","target","onKeyPress","key","onClick","link","loginStatus","API_BASE_URL","getUserId","a","cookie","load","getHttp","url","config","checkToken","then","axios","get","postHttp","body","post","setTokens","accessToken","refreshToken","setAccessToken","setRefreshToken","checkLoginStatus","undefined","refreshAccessToken","defaults","headers","common","response","data","token","catch","error","console","log","decodedToken","jwt_decode","accessTokenExpires","Date","exp","setMinutes","getMinutes","save","sub","path","expires","roles","refreshTokenExpires","TrainingCard","style","width","training","trainingId","textDecoration","src","position","opacity","height","alt","borderRadius","title","trainer","views","modifiedDate","modifiedTime","timeAmount","moment","time","toFixed","setDate","Trainings","trainings","map","index","Main","setTrainings","pageInfo","setPageInfo","useEffect","r","page","_embedded","trainingList","alert","message","margin","SearchVideoList","videoName","chanelName","view","content","videoInfo","setVideoInfo","verticalAlign","maxHeight","channelName","date","ProfileOfUser","nickName","setNickName","nickNameChange","setNickNameChange","newNickName","setNewNickName","changeNickName","marginBottom","marginLeft","display","placeholder","marginRight","fontSize","float","background","paddingTop","border","color","backgroundColor","padding","marginTop","MyComment","VideoInfo","trainingInfo","Comment","comment","commenterId","Training","setTrainingInfo","comments","setComments","match","params","totalElements","commentList","Filter","Search","id","setId","chkId","setChkId","nick","setNick","chkNick","setChkNick","pw","setPw","rePw","setRePw","chkPw","setChkPw","email","setEmail","chkEmail","setChkEmail","redirectHome","length","signUp","password","responseData","userId","setIsLogin","checkNick","res","status","checkId","textAlign","type","disabled","setPassword","signIn","Upload","uploadAvailable","setUploadAvailable","setVideoName","videoExplain","setVideoExplain","upload","resize","App","setLoginStatus","checkLogin","basename","process","exact","component","MyPage","render","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.75ee8b36.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport '../css/TopBar.css';\nimport {Link, withRouter} from 'react-router-dom';\n\n\nconst TopBar = (props) => {\n    const [searchString, setSearchString] = useState(\"\");\n\n    const onSearchStringChanges = e => setSearchString(e.target.value);\n\n    const search = () => props.history.push('/search?title=' + searchString);\n    const loginOrMyPage = () => {\n        let link = props.loginStatus ? \"mypage\" : \"login\";\n        props.history.push(link)\n    };\n    const onKeyPress = (e) => {\n        if (e.key === 'Enter' && searchString !== \"\") {\n            search();\n        }\n    };\n\n    return (\n        <div className='Menu-wrapper'>\n            <Link to='/'>\n                <button className=\"Home\">Home</button>\n            </Link>\n\n            <input className='input' value={searchString} onChange={onSearchStringChanges} onKeyPress={onKeyPress}/>\n            <button className=\"searchButton\" onClick={search}>검색</button>\n            <button className=\"MyPage\" onClick={loginOrMyPage}>{props.loginStatus ? \"mypage\" : \"login\"}</button>\n        </div>\n    )\n};\n\nexport default withRouter(TopBar);","import axios from 'axios';\nimport cookie from 'react-cookies'\nimport jwt_decode from \"jwt-decode\";\n\nconst API_BASE_URL = \"https://mexus-api.herokuapp.com\";\n\nexport const getUserId = async () => cookie.load('userId');\nexport const getUserRole = async () => cookie.load('userRole');\n\nexport const getHttp = async (url, config) => {\n    return await checkToken()\n        .then(async () => {\n            return await axios.get(API_BASE_URL + url, config)\n            //.catch(error => { console.log('error : ', error.response.data) });\n        });\n\n};\n\nexport const postHttp = async (url, body, config) => {\n    return await checkToken()\n        .then(async () => {\n            return await axios.post(API_BASE_URL + url, body, config)\n            //.catch(error => { console.log('error : ', error.response.data) });\n        })\n};\n\nexport const putHttp = async (url, body, config) => {\n    return await checkToken()\n        .then(async () => {\n            return await axios.put(API_BASE_URL + url, body, config)\n            //.catch(error => { console.log('error : ', error.response.data) });\n        })\n};\n\nexport const deleteHttp = async (url, config) => {\n    return await checkToken()\n        .then(async () => {\n            return await axios.delete(API_BASE_URL + url, config)\n            //.catch(error => { console.log('error : ', error.response.data) });\n        });\n};\n\nexport const setTokens = async (accessToken, refreshToken) => {\n    setAccessToken(accessToken);\n    setRefreshToken(refreshToken);\n};\n\nexport const checkLoginStatus = async () => {\n    let refreshToken = await cookie.load('refreshToken');\n    return refreshToken !== undefined;\n}\n\nconst checkToken = async () => {\n    let accessToken = await cookie.load('accessToken');\n    let refreshToken = await cookie.load('refreshToken');\n    if (refreshToken !== undefined) {\n        if (accessToken === undefined) {\n            await refreshAccessToken(refreshToken);\n            accessToken = await cookie.load('accessToken');\n        }\n        axios.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`;\n    } else\n        delete axios.defaults.headers.common['Authorization'];\n};\n\nconst refreshAccessToken = async (refreshToken) => {\n    return await axios.post(API_BASE_URL + \"/auth/refresh\", { refreshToken: refreshToken })\n        .then((response) => response.data.accessToken)\n        .then((token) => setAccessToken(token))\n        .catch(error => {\n            console.log('error : ', error.response.data)\n        });\n};\n\nconst setAccessToken = (accessToken) => {\n    let decodedToken = jwt_decode(accessToken);\n    const accessTokenExpires = new Date(decodedToken.exp * 1000);\n    accessTokenExpires.setMinutes(accessTokenExpires.getMinutes() - 1, 0, 0)\n    cookie.save('userId', decodedToken.sub,\n        {\n            path: '/',\n            expires: accessTokenExpires\n        });\n    cookie.save('userRole', decodedToken.roles,\n        {\n            path: '/',\n            expires: accessTokenExpires\n        });\n    cookie.save('userNickName', decodedToken.sub,   // 여기 nickName\n        {\n            path: '/',\n            expires: accessTokenExpires\n        });\n    cookie.save('accessToken', accessToken,\n        {\n            path: '/',\n            expires: accessTokenExpires\n            //secure: true\n            //httpOnly: true\n        });\n};\nconst setRefreshToken = (refreshToken) => {\n    const refreshTokenExpires = new Date(jwt_decode(refreshToken).exp * 1000)\n    refreshTokenExpires.setMinutes(refreshTokenExpires.getMinutes() - 1, 0, 0)\n\n    cookie.save('refreshToken', refreshToken,\n        {\n            path: '/',\n            expires: refreshTokenExpires,\n            //secure: true\n            //httpOnly: true\n        });\n};","import React from 'react';\nimport '../css/VideoList.css' // 충돌날까봐 일단 파일 이름은 안바꿧음!!\nimport {Link} from 'react-router-dom';\nimport moment from 'moment';\nimport 'moment/locale/ko';\n\nconst TrainingCard = (props) => {\n\n    const setDate = modifiedDate => {\n        let modifiedTime = new Date(modifiedDate);\n        let nowTime = moment();\n        let timeAmount = (nowTime - modifiedTime) / 1000;\n        let time = '';\n\n        if (timeAmount >= 60 * 60 * 24 * 365) time = (timeAmount / (60 * 60 * 24 * 365)).toFixed() + '년 전';\n        else if (timeAmount >= 60 * 60 * 24 * 30) time = (timeAmount / (60 * 60 * 24 * 30)).toFixed() + '달 전';\n        else if (timeAmount >= 60 * 60 * 24) time = (timeAmount / (60 * 60 * 24)).toFixed() + '일 전';\n        else if (timeAmount >= 60 * 60) time = (timeAmount / (60 * 60)).toFixed() + '시간 전';\n        else if (timeAmount >= 60) time = (timeAmount / (60)).toFixed() + '분 전';\n        else if (timeAmount >= 0) time = (timeAmount).toFixed() + '초 전';\n        return time;\n    };\n\n    return (\n        <div className='Video' style={{width: '400px'}}>\n            <Link to={\"/training/\"+props.training.trainingId} style={{textDecoration: 'none'}}>\n                <img src='https://tistory4.daumcdn.net/tistory/3028340/skin/images/bts_sreenshot.001.jpeg'\n                     position=\"relative\" opacity=\"0.5\" width=\"300\" height=\"190\" alt=\"\"\n                     style={{borderRadius: '1rem'}}/>\n                    <font className='VideoName'>\n                        {props.training.title}<br/>\n                    </font>\n                    <font className='Channel'>\n                        {props.training.trainer}<br/>\n                    </font>\n                    <font className='Play'>\n                        {\"조회수 \" + props.training.views + \"회\"}\n                    </font>\n                    &nbsp;-&nbsp;\n                    <font className='time'>\n                        {setDate(props.training.modifiedDate)}\n                    </font>\n            </Link>\n        </div>\n    );\n};\n\nexport default TrainingCard;","import React from 'react';\nimport TrainingCard from './TrainingCard';\n\nconst Trainings = (props) => {\n    return (\n        <div>\n            {props.trainings.map((training, index) => <TrainingCard key={training.trainingId} training={training}/>)}\n        </div>\n    );\n};\n\nexport default Trainings;","import React, {useEffect, useState} from 'react';\nimport '../css/Main.css';\nimport {getHttp} from \"../utils/authHttpWrapper\";\nimport Trainings from \"../components/Trainings\";\n\nconst Main = (props) => {\n\n    const [trainings, setTrainings] = useState([]);\n    const [pageInfo, setPageInfo] = useState();\n    useEffect(() => {\n        getHttp(\"/trainings\").then(r => {\n            setPageInfo(r.data.page);\n            setTrainings(r.data._embedded.trainingList)\n        }).catch(error => {\n            alert(error.response.data.message)\n        });\n    }, []);\n    console.log(pageInfo)\n\n    return (\n        <div style={{margin: '30px'}}>\n            <Trainings trainings={trainings}/>\n        </div>\n    )\n};\n\nexport default Main;","import React, {useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport '../css/SearchVideoList.css';\n\nfunction SearchVideoList() {\n    const [videoInfo, setVideoInfo] = useState({\n        videoName: \"영상 제목\",\n        chanelName: \"채널이름\",\n        view: \"날짜\",\n        content: \"영상 설명\"\n    });\n\n        setVideoInfo();\n    return (\n        <div>\n            <Link to='/training' style={{textDecoration: 'none'}}>\n                <div className='SearchVideo'>\n                    {/* 나중에 List로 구현 */}\n\n                    <img className=\"VideoImage\"\n                         src='https://tistory4.daumcdn.net/tistory/3028340/skin/images/bts_sreenshot.001.jpeg'\n                         style={{verticalAlign: 'top'}} alt=''/>\n                    <text>\n                        <div className='VideoInfo'>\n                            <div className='SearchVideoName' style={{width: \"800px\", maxHeight: \"80px\"}}>\n                                {videoInfo.videoName}\n                            </div>\n                            <div className='SearchChannelName' style={{width: \"800px\", height: \"21px\"}}>\n                                {videoInfo.channelName}\n                            </div>\n                            <div className='SearchVideoInfo' style={{width: \"800px\"}}>\n                                <font>\n                                    {videoInfo.view}\n                                </font>\n                                &nbsp;-&nbsp;\n                                <font>\n                                    {videoInfo.date}\n                                </font>\n                            </div>\n                            <div className='SearchVideoContent' style={{width: \"800px\", height: \"100px\"}}>\n                                {videoInfo.content}\n                            </div>\n                        </div>\n                    </text>\n                </div>\n            </Link>\n        </div>\n    );\n}\n\nexport default SearchVideoList;","import React, {useState} from 'react';\nimport '../css/ProfileOfUser.css';\nimport SearchVideoList from '../components/SearchVideoList';\nimport {Link} from 'react-router-dom';\n\nfunction ProfileOfUser() {\n\n    const [nickName, setNickName] = useState('??');\n    const [nickNameChange, setNickNameChange] = useState(false);\n    const [newNickName, setNewNickName] = useState('');\n\n    const onChangeNickName = e => setNewNickName(e.target.value);\n\n    const changeNickName = async () => {\n        // let nick = await getUserNickName();      // 수정\n        if (nickNameChange === false) {\n            setNickNameChange(true);\n        } else {\n            setNickName(newNickName);\n            setNickNameChange(false);\n        }\n    }\n\n    const onKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            changeNickName();\n        }\n    }\n\n\n    return (\n        <div>\n            <div style={{marginBottom: '200px', marginLeft: '200px'}}>\n                <img className='UserProfile '\n                     src=\"https://avatars1.githubusercontent.com/u/50524321?s=460&u=7621eb647ffc21484a8ddb3914275574063c08cb&v=4\" alt={\"\"}/>\n                <text style={{marginLeft: '400px'}}>\n                    <div className='UserInfo' style={{display: 'table-cell'}}>\n                        <div className='NickName'>{nickNameChange ?\n                            <input onChange={onChangeNickName} onKeyPress={onKeyPress}\n                                   placeholder={nickName}/> : nickName}</div>\n                        <button className='NickNameEditButton' onClick={changeNickName}>닉네임 편집</button>\n                    </div>\n                </text>\n            </div>\n            <div style={{marginLeft: '130px'}}>\n                <text>\n                    <div style={{display: 'table-cell', marginRight: '10px'}}>\n                        <text style={{fontSize: 'xx-large'}}>\n                            내가 올린 운동\n                        </text>\n                        <Link to='/upload'>\n                            <button style={{\n                                float: 'right',\n                                width: '42px',\n                                height: '42px',\n                                background: 'lightgray',\n                                paddingTop: '0px',\n                                border: 'none',\n                                borderRadius: '0.7rem',\n                                color: 'white',\n                                fontSize: 'xx-large',\n                                verticalAlign: 'center'\n                            }}\n                                    onClick={{}}>\n                                +\n                            </button>\n                        </Link>\n                        <div style={{\n                            backgroundColor: 'lightgray',\n                            width: '1500px',\n                            height: '800px',\n                            padding: '20px',\n                            marginTop: '10px'\n                        }}>\n                            <SearchVideoList/>\n                        </div>\n                    </div>\n                </text>\n\n                {/* <text style={{marginLeft:'20px'}}>\n                    <div style={{ display: 'table-cell' }}>\n                        <div style={{ fontSize: 'xx-large', marginBottom: '10px' }}>\n                            구독 리스트\n                        </div>\n                        <div style={{ backgroundColor: 'lightgray', width: '420px', height:'800px', padding: '20px' }}>\n                            <Trainings />\n                        </div>\n                    </div>\n                </text> */}\n            </div>\n        </div>\n    );\n}\n\nexport default ProfileOfUser;","import React from 'react';\nimport '../css/MyComment.css';\n\nconst MyComment = () => {\n\n    return (\n        <div>\n            <div className='Comment'>\n                <text>\n                    댓글\n                </text>\n            </div>\n            <div className='MyComment'>\n                <img className='MyProfile' src=\"https://avatars1.githubusercontent.com/u/19163372?s=60&v=4\" alt=\"\"/>\n                <textarea className='Input' placeholder=\"댓글 입력\"/>\n                <button className='CommentButton'>\n                    입력\n                </button>\n            </div>\n        </div>\n    );\n}\n\nexport default MyComment;","import React from 'react'\nimport '../css/VideoInfo.css'\n\nconst VideoInfo = (props) => {\n    return (\n        <div className='VideoInfos'>\n            <div>\n                <text className='VideoName'>\n                    {props.trainingInfo.title}\n                </text>\n                <button className='LikeButton'/>\n                <button className='InputButton'>\n                    +\n                </button>\n            </div>\n            <div className='Count'>\n                <text>\n                    {props.trainingInfo.views}\n                </text>\n                <text className='Date'>\n                    {props.trainingInfo.modifiedDate}\n                </text>\n            </div>\n            <div className='ChannelInfo'>\n                <img className='Profile' src=\"https://avatars2.githubusercontent.com/u/18184139?s=64&v=4\" alt=\"\"/>\n                <text className='ChannelName'>\n                    {props.trainingInfo.trainer}\n                </text>\n                <button className='SubscribeButton'>\n                    구독\n                </button>\n            </div>\n            <div className='VideoExplain'>\n                <text>\n                    {props.trainingInfo.body}\n                </text>\n            </div>\n            <hr/>\n        </div>\n    )\n}\n\nexport default VideoInfo;","import React from 'react';\nimport '../css/CommentList.css';\n\nconst Comment = (props) => {\n    return (\n        <div className='CommentList'>\n            <img className='MyProfile' src=\"https://avatars0.githubusercontent.com/u/59818703?s=64&v=4\" alt=\"\"/>\n            <text>\n                <div className='CommentInfos' style={{display: 'table-cell' /** 위치를 바로 옆에 나오게 함 */}}>\n                    <div className='CommentName'>\n                        {props.comment.commenterId}\n                    </div>\n                    <div className='CommentBody'>\n                        {props.comment.message}\n                    </div>\n                    <div className='Modify'>수정</div>\n                </div>\n            </text>\n        </div>\n    );\n};\n\nexport default Comment;","import React, {useEffect, useState} from 'react';\nimport MyComment from '../components/MyComment.js'\nimport VideoInfo from '../components/VideoInfo.js'\nimport {getHttp} from \"../utils/authHttpWrapper\";\nimport Comment from \"../components/Comment\";\n\nconst Training = (props) => {\n    const [trainingInfo, setTrainingInfo] = useState('');\n    const [comments, setComments] = useState([]);\n\n    useEffect(() => {\n        getHttp(\"/trainings/\" + props.match.params.trainingId)\n            .then(response => setTrainingInfo(response.data))\n            .then(async () => await getHttp(\"/comments/\"+props.match.params.trainingId))\n            .then(response => {\n                if(response.data.page.totalElements !==0)\n                    setComments(response.data._embedded.commentList)\n                console.log(response)\n            })\n    }, [props.match.params.trainingId]);\n\n    return (\n        <div>\n            {/* <Player /> */}\n            <div style={{height: 1000, backgroundColor: 'black'}}>\n            </div>\n            <VideoInfo trainingInfo={trainingInfo}/>\n            <MyComment/>\n            {comments.map((comment,index)=><Comment key={index} comment={comment}/>)}\n        </div>\n    );\n};\n\nexport default Training;","import React from 'react';\nimport '../css/Filter.css';\n\nconst Filter = () => {\n    return(\n        <button className='FilterButton' style={{height:\"30px\"}}>필터</button>\n    )\n}\n\nexport default Filter;","import React from 'react';\nimport SearchVideoList from '../components/SearchVideoList';\nimport Filter from '../components/Filter';\n\nfunction Search() {\n    return (\n        <div style={{ marginLeft: '16%' }}>\n            <Filter />\n            <div style={{marginTop:'50px'}}>\n                <SearchVideoList />\n            </div>\n        </div>\n    );\n}\n\nexport default Search;","import React, { useEffect, useState } from 'react';\nimport '../css/SignUp.css';\nimport { checkLoginStatus, getHttp, getUserId, postHttp, setTokens } from '../utils/authHttpWrapper'\n\nimport { Link, withRouter } from 'react-router-dom';\n\nconst SignUp = (props) => {\n    const [id, setId] = useState(\"\");\n    const [chkId, setChkId] = useState(\"\");\n    const [nick, setNick] = useState(\"\");\n    const [chkNick, setChkNick] = useState(\"\");\n    const [pw, setPw] = useState(\"\");\n    const [rePw, setRePw] = useState(\"\");\n    const [chkPw, setChkPw] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [chkEmail, setChkEmail] = useState(\"\");\n\n    const onChangeId = e => setId(e.target.value);\n    const onChangeNick = e => setNick(e.target.value);\n    const onChangePw = e => setPw(e.target.value);\n    const onChangeRepw = e => setRePw(e.target.value);\n    const onChangeEmail = e => setEmail(e.target.value);\n\n    useEffect(() => {\n        redirectHome();\n        setChkId('❌');\n        setChkNick('❌');\n        // eslint-disable-next-line\n    }, []);\n\n    useEffect(() => {\n        if (pw.length < 1 || rePw.length < 1) {\n            setChkPw('❌')\n            // 비밀번호가 같다면 일치\n        } else if (pw === rePw) {\n            setChkPw('✅')\n            // 비밀번호가 같지 않다면 불일치\n        } else {\n            setChkPw('❌')\n        }\n    }, [pw, rePw]);\n\n    useEffect(() => {\n        const emailRegExp = /^[\\w-]+(\\.[\\w-]+)*@([a-z0-9-]+(\\.[a-z0-9-]+)*?\\.[a-z]{2,6}|(\\d{1,3}\\.){3}\\d{1,3})(:\\d{4})?$/;\n        if (email.match(emailRegExp)) {\n            setChkEmail(\"✅\")\n        } else {\n            setChkEmail(\"❌\")\n        }\n    }, [email]);\n\n    const signUp = async () => {\n        let responseData = await postHttp('/auth/signup', {\n            id: id,\n            password: pw,\n            nickName: nick,\n            email: email\n        }).catch(error => {\n            console.log('error on component : ', error.response.data)\n        });\n        if (responseData !== undefined) {\n            await setTokens(responseData.data.accessToken, responseData.data.refreshToken);\n            let userId = await getUserId();\n            alert(userId + \"님 반갑습니다.\");\n            props.setIsLogin(true)\n            props.history.push('/')\n        }\n    };\n\n    const checkNick = async () => {\n        let res = await getHttp('/auth/checkNickName/' + nick)\n            .catch(e => setChkNick(\"❌\"));\n        if (res !== undefined)\n            if (res.status === 200)\n                setChkNick(\"✅\");\n            else if (res.status === 202)\n                setChkNick(\"❌\");\n    };\n\n    const checkId = async () => {\n        let res = await getHttp('/auth/checkid/' + id)\n            .catch(e => setChkId(\"❌\"));\n        if (res.status === 200)\n            setChkId(\"✅\");\n        else if (res.status === 202)\n            setChkId(\"❌\");\n    };\n    const redirectHome = async () => {\n        let status = await checkLoginStatus();\n        if (status) {\n            alert(\"이미 로그인된 상태입니다.\");\n            props.history.push('/')\n        }\n    };\n\n    return (\n        <div style={{ textAlign: \"center\" }}>\n            <Link to='/'>\n                <button className='MainButton'>\n                </button>\n            </Link>\n            <div>\n                <input className='TextInput' style={{ width: '400px' }} placeholder='닉네임' value={nick} onChange={onChangeNick} />{chkNick}\n                <button className='DuplicateButton' onClick={checkNick}> 닉네임<br/>중복확인</button>\n                <div>\n                    <input className='TextInput' style={{width:'400px'}} placeholder='아이디' value={id} onChange={onChangeId} />{chkId}\n                    <button className='DuplicateButton' onClick={checkId}> ID<br/>중복확인</button>\n                </div>\n                <input className='TextInput' placeholder='비밀번호' value={pw} type=\"password\" onChange={onChangePw} />\n                <div>\n                    <input className='TextInput' style={{width:'500px'}} placeholder='비밀번호 확인' value={rePw} type=\"password\"\n                        onChange={onChangeRepw} />{chkPw}\n                </div>\n                <input className='TextInput' style={{width:'500px'}} placeholder='이메일' type='email' value={email}\n                    onChange={onChangeEmail} />{chkEmail}\n                <div>\n                    <button className='SignInAndLogInButton' onClick={signUp}\n                        disabled={chkPw !== '✅' || chkEmail !== '✅' || chkId !== '✅' || chkNick !== '✅'}>\n                        회원가입 후 로그인\n                </button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default withRouter(SignUp);","import React, { useEffect, useState } from 'react';\nimport '../css/LogIn.css';\nimport { Link, withRouter } from 'react-router-dom';\nimport { checkLoginStatus, getUserId, postHttp, setTokens } from \"../utils/authHttpWrapper\";\n\n\nconst LogIn = (props) => {\n    const [id, setId] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const onChangeId = e => setId(e.target.value);\n    const onChangePawword = e => setPassword(e.target.value);\n\n    useEffect(() => {\n        redirectHome();\n        // eslint-disable-next-line\n    }, []);\n    const redirectHome = async () => {\n        let status = await checkLoginStatus();\n        if (status) {\n            alert(\"이미 로그인된 상태입니다.\");\n            props.history.push('/')\n        }\n    };\n    const signIn = async () => {\n        let responseData = await postHttp('/auth/signin', {\n            id: id,\n            password: password,\n        }).catch(error => {\n            alert(error.response.data.message)\n        });\n        if (responseData !== undefined) {\n            await setTokens(responseData.data.accessToken, responseData.data.refreshToken);\n            let userId = await getUserId();\n            alert(userId + \"님 반갑습니다.\");\n            props.setIsLogin(true)\n            props.history.push('/')\n        }\n    };\n\n    const onKeyPress = (e) => {\n        if (e.key === 'Enter') signIn();\n    }\n\n    return (\n        <div style={{ textAlign: \"center\" }}>\n            <Link to='/'>\n                <button className='MainButton'>\n                </button>\n            </Link>\n            <div>\n                <input className='TextInput' value={id} placeholder='아이디' onChange={onChangeId} onKeyPress={onKeyPress} />\n            </div>\n            <input className='TextInput' value={password} placeholder='비밀번호' type='password' onChange={onChangePawword} onKeyPress={onKeyPress} />\n            <div>\n            <button className='LogInButton' disabled={id === '' || password === ''} onClick={signIn} > 로그인</button>\n            </div>\n            <br />\n            <Link to='/signup'>\n                <button className='SignInButton'> 회원가입</button>\n            </Link>\n        </div>\n    );\n};\n\nexport default withRouter(LogIn);\n","import React, {useEffect, useState} from 'react';\nimport {postHttp} from '../utils/authHttpWrapper';\n\nconst Upload = (props) => {\n    // const [count, setCount] = useState(0);\n    // const [clickCount, setClickCount] = useState(0);\n\n    // // componentDidMount, componentDidUpdate와 비슷합니다\n    // useEffect(() => {\n    //   // 브라우저 API를 이용해 문서의 타이틀을 업데이트합니다\n    //   document.title = `You clicked ${count} times ${clickCount}`;\n    // }, [count]);\n\n    // return (\n    //   <div>\n    //     <p>You clicked {count} times and {clickCount}</p>\n    //     <p>{document.title}</p>\n    //     <button onClick={() => setCount(count + 1)}>\n    //       Click me\n    //     </button>\n    //     <button onClick={() => setClickCount(clickCount+1)}>\n    //         Not Effect\n    //     </button>\n    //   </div>\n    // );\n\n    const [uploadAvailable, setUploadAvailable] = useState(false);\n    //const [video, setVideo] = useState(null);\n    //const [thumbnail, setThumbnail] = useState(null);\n    const [videoName, setVideoName] = useState(\"\");\n    const [videoExplain, setVideoExplain] = useState(\"\");\n\n    useEffect(() => {\n        if (videoName === \"\" || videoExplain === \"\") {\n            setUploadAvailable(false);\n        } else {\n            setUploadAvailable(true);\n        }\n    }, [videoName, videoExplain]);\n\n    // 영상(1)과 썸네일(2) 업로드 추후에 진행\n\n    const changeVideoName = e => setVideoName(e.target.value);\n    const changeVideoExplain = e => setVideoExplain(e.target.value);\n\n\n    const upload = async () => {\n        let uploadVideo = await postHttp('/trainings', {\n            title: videoName,\n            body: videoExplain\n        }).catch(error => {\n            console.log('error on component : ', error.response.data)\n        })\n        if (uploadVideo !== undefined) {\n            alert(\"<\" + videoName + \"> 업로드 되었습니다.\");\n            props.history.push('/mypage')\n        }\n    }\n\n    return (\n        <div style={{marginLeft: 'px', textAlign: 'center'}}>\n            <div>\n                <button style={{\n                    width: '63%',\n                    height: '500px',\n                    marginRight: '1%',\n                    fontSize: 'xx-large',\n                    background: 'lightgray',\n                    border: 'none',\n                    borderRadius: '1rem'\n                }}>\n                    업로드할 영상을 선택해주세요.\n                </button>\n                <button style={{\n                    width: '33%',\n                    height: '500px',\n                    fontSize: 'xx-large',\n                    background: 'lightgray',\n                    border: 'none',\n                    borderRadius: '1rem'\n                }}>\n                    대표사진을 선택해주세요.\n                </button>\n            </div>\n            <input placeholder='영상 제목 입력' onChange={changeVideoName} style={{\n                width: '96%',\n                marginTop: '20px',\n                padding: '5px',\n                fontSize: 'xx-large',\n                border: 'solid 2px black',\n                borderRadius: '0.5rem'\n            }}/>\n            <div>\n                <textarea placeholder='내용을 입력해주세요.' onChange={changeVideoExplain} style={{\n                    width: '96%',\n                    height: '500px',\n                    marginTop: '20px',\n                    padding: '5px',\n                    fontSize: 'large',\n                    border: 'solid 2px black',\n                    borderRadius: '0.5rem',\n                    resize: 'none'\n                }}/>\n            </div>\n            <button disabled={!uploadAvailable} onClick={upload} style={{\n                width: '300px',\n                height: '75px',\n                fontSize: 'xx-large',\n                background: 'lightgray',\n                margin: '30px',\n                border: 'none',\n                borderRadius: '1rem'\n            }}>\n                영상 올리기\n            </button>\n        </div>\n    );\n}\n\nexport default Upload;","import React, {useEffect, useState} from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport TopBar from './components/TopBar'\nimport Main from './pages/Main'\nimport MyPage from './pages/ProfileOfTrainer'\nimport Training from './pages/Training';\nimport Search from './pages/Search';\nimport SignUp from './pages/SignUp';\nimport LogIn from './pages/LogIn';\nimport {checkLoginStatus} from \"./utils/authHttpWrapper\";\nimport Upload from './pages/Upload';\n\nfunction App() {\n    const [loginStatus, setLoginStatus] = useState(false);\n\n    useEffect(() => {\n        checkLogin()\n        // eslint-disable-next-line\n    }, []);\n\n    const checkLogin = async () => {\n        let status = await checkLoginStatus();\n        setLoginStatus(status)\n    };\n\n    return (\n        <Router basename={process.env.PUBLIC_URL}>\n            <TopBar loginStatus={loginStatus}/>\n            <Switch>\n                <Route exact path='/' component={Main}/>\n                <Route path='/training/:trainingId' component={Training}/>\n                <Route path='/mypage' component={MyPage}/>\n                <Route path='/search' component={Search}/>\n                <Route path='/login' render={() => <LogIn setIsLogin={setLoginStatus}/>}/>\n                <Route path='/signup' render={() => <SignUp setIsLogin={setLoginStatus}/>}/>\n                <Route path='/upload' component={Upload}/>\n            </Switch>\n        </Router>\n    );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport Main from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Main/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}