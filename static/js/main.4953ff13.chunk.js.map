{"version":3,"sources":["components/TopBar.js","utils/authHttpWrapper.js","components/TrainingCard.js","components/Trainings.js","pages/Main.js","components/SearchVideoList.js","pages/ProfileOfTrainer.js","components/MyComment.js","components/VideoInfo.js","components/Comment.js","utils/posenet/components/Loading.js","utils/posenet/util.js","utils/posenet/components/PoseNet.js","utils/posenet/hooks/useLoadPoseNet.js","utils/posenet/hooks/useInputImage.js","utils/cosineSimilarity.js","components/Player.js","pages/Training.js","components/Filter.js","pages/Search.js","pages/SignUp.js","pages/LogIn.js","pages/Upload.js","App.js","serviceWorker.js","index.js"],"names":["withRouter","props","useState","searchString","setSearchString","search","history","push","className","to","value","onChange","e","target","onKeyPress","key","onClick","link","loginStatus","API_BASE_URL","getUserId","a","cookie","load","getUserNickName","getHttp","url","config","checkToken","then","axios","get","postHttp","body","post","putHttp","put","deleteHttp","delete","setTokens","accessToken","refreshToken","setAccessToken","setRefreshToken","checkLoginStatus","undefined","refreshAccessToken","defaults","headers","common","response","data","token","catch","error","console","log","decodedToken","jwt_decode","accessTokenExpires","Date","exp","setMinutes","getMinutes","save","sub","path","expires","roles","nickName","refreshTokenExpires","TrainingCard","training","trainingId","src","position","opacity","width","height","alt","title","trainer","views","modifiedDate","modifiedTime","timeAmount","moment","time","toFixed","setDate","Trainings","trainings","map","Main","setTrainings","useEffect","r","_embedded","trainingList","alert","message","SearchVideoList","videoName","channelName","view","content","videoInfo","setVideoInfo","date","ProfileOfTrainer","setNickName","nickNameChange","setNickNameChange","newNickName","setNewNickName","imgPreview","setImagePreview","imgUpload","setImgUpload","imgChanging","setImageChanging","userId","changeNickName","submitImage","fd","FormData","append","res","onError","type","accept","URL","createObjectURL","files","placeholder","MyComment","commentBody","setCommentBody","inputComment","refresh","VideoInfo","trainingInfo","likes","like","setLike","subscribe","setSubscribe","ChangeSubscribe","getTrainingInfo","createdDate","toString","slice","Comment","isModify","setIsModify","modifiedComment","setModifiedComment","onModifyComment","comment","commenterId","commentId","onDeleteComment","name","Error","color","getConfidentPoses","poses","minPoseConfidence","minPartConfidence","filter","score","pose","keypoints","PoseNet","style","facingMode","frameRate","input","onEstimate","inferenceConfig","modelConfig","curFrame","ctx","setCtx","net","modelConfigString","JSON","stringify","setNet","posenet","parse","err","poseNet","loadNet","useLoadPoseNet","errorMessage","setErrorMessage","onEstimateRef","useRef","inferenceConfigRef","current","image","setImage","userMediaDisabled","constraints","video","audio","getMediaStreamConstraints","useUserMediaVideo","userMediaError","useInputImage","some","elem","intervalId","requestId","cleanUp","clearInterval","cancelAnimationFrame","estimate","drawImage","estimatePoses","confidentPoses","setInterval","Math","round","requestAnimationFrame","animate","Loading","ref","c","getContext","cosineSimilarity","user","getVector","v1","getUserVector","v2","getScore","i","x","y","getWeight","cosine","vector","sqrt","pow","json","keyPoint","length","point","parseFloat","defaultProps","Player","setCurFrame","player","setPlayer","playing","setPlaying","setScore","setStyle","mockData","setMockData","fLen","setFLen","setState","frame","frames","display","id","controls","onPlay","onPause","progressInterval","onProgress","floor","played","seekTo","playedSeconds","p","zIndex","flipHorizontal","background","fontSize","justifyContent","Training","trainerId","now","setTrainingInfo","comments","setComments","match","params","refreshComments","page","totalElements","commentList","index","Filter","Search","setId","chkId","setChkId","nick","setNick","chkNick","setChkNick","pw","setPw","rePw","setRePw","chkPw","setChkPw","email","setEmail","chkEmail","setChkEmail","redirectHome","signUp","password","responseData","setIsLogin","checkNick","status","checkId","disabled","setPassword","signIn","Upload","uploadAvailable","setUploadAvailable","setVideo","thumbnail","setThumbnail","setVideoName","videoExplain","setVideoExplain","upload","tID","_links","self","href","App","setLoginStatus","checkLogin","basename","process","exact","component","MyPage","render","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4953ff13.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport '../css/TopBar.css';\nimport {Link, withRouter} from 'react-router-dom';\n\n\nconst TopBar = (props) => {\n    const [searchString, setSearchString] = useState(\"\");\n\n    const onSearchStringChanges = e => setSearchString(e.target.value);\n\n    const search = () => props.history.push('/search?title=' + searchString);\n    const loginOrMyPage = () => {\n        let link = props.loginStatus ? \"/mypage\" : \"/login\";\n        props.history.push(link)\n    };\n    const onKeyPress = (e) => {\n        if (e.key === 'Enter' && searchString !== \"\") {\n            search();\n        }\n    };\n\n    return (\n        <div className='Menu-wrapper'>\n            <Link to='/'>\n                <button className=\"Home\">Home</button>\n            </Link>\n\n            <input className='input' value={searchString} onChange={onSearchStringChanges} onKeyPress={onKeyPress}/>\n            <button className=\"searchButton\" onClick={search}>검색</button>\n            <button className=\"MyPage\" onClick={loginOrMyPage}>{props.loginStatus ? \"mypage\" : \"login\"}</button>\n        </div>\n    )\n};\n\nexport default withRouter(TopBar);","import axios from 'axios';\nimport cookie from 'react-cookies'\nimport jwt_decode from \"jwt-decode\";\n\nexport const API_BASE_URL = \"https://mexusapi.codingnome.dev\";\n\nexport const getUserId = async () => cookie.load('userId');\nexport const getUserRole = async () => cookie.load('userRole');\nexport const getUserNickName = async () => cookie.load('nickName');\nexport const logout = async () => cookie.remove('accessToken');\n\nexport const getHttp = async (url, config) => {\n    return await checkToken()\n        .then(async () => {\n            return await axios.get(API_BASE_URL + url, config)\n            //.catch(error => { console.log('error : ', error.response.data) });\n        });\n\n};\n\nexport const postHttp = async (url, body, config) => {\n    return await checkToken()\n        .then(async () => {\n            return await axios.post(API_BASE_URL + url, body, config)\n            //.catch(error => { console.log('error : ', error.response.data) });\n        })\n};\n\nexport const putHttp = async (url, body, config) => {\n    return await checkToken()\n        .then(async () => {\n            return await axios.put(API_BASE_URL + url, body, config)\n            //.catch(error => { console.log('error : ', error.response.data) });\n        })\n};\n\nexport const deleteHttp = async (url, config) => {\n    return await checkToken()\n        .then(async () => {\n            return await axios.delete(API_BASE_URL + url, config)\n            //.catch(error => { console.log('error : ', error.response.data) });\n        });\n};\n\nexport const setTokens = async (accessToken, refreshToken) => {\n    setAccessToken(accessToken);\n    setRefreshToken(refreshToken);\n};\n\nexport const checkLoginStatus = async () => {\n    let refreshToken = await cookie.load('refreshToken');\n    return refreshToken !== undefined;\n};\n\nconst checkToken = async () => {\n    let accessToken = await cookie.load('accessToken');\n    let refreshToken = await cookie.load('refreshToken');\n    if (refreshToken !== undefined) {\n        if (accessToken === undefined) {\n            await refreshAccessToken(refreshToken);\n            accessToken = await cookie.load('accessToken');\n        }\n        axios.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`;\n    } else\n        delete axios.defaults.headers.common['Authorization'];\n};\n\nconst refreshAccessToken = async (refreshToken) => {\n    return await axios.post(API_BASE_URL + \"/auth/refresh\", {refreshToken: refreshToken})\n        .then((response) => response.data.accessToken)\n        .then((token) => setAccessToken(token))\n        .catch(error => {\n            console.log('error : ', error.response.data)\n        });\n};\n\nconst setAccessToken = (accessToken) => {\n    let decodedToken = jwt_decode(accessToken);\n    const accessTokenExpires = new Date(decodedToken.exp * 1000);\n    accessTokenExpires.setMinutes(accessTokenExpires.getMinutes() - 1, 0, 0)\n    cookie.save('userId', decodedToken.sub,\n        {\n            path: '/',\n            expires: accessTokenExpires\n        });\n    cookie.save('userRole', decodedToken.roles,\n        {\n            path: '/',\n            expires: accessTokenExpires\n        });\n    cookie.save('nickName', decodedToken.nickName,\n        {\n            path: '/',\n            expires: accessTokenExpires\n        });\n    cookie.save('accessToken', accessToken,\n        {\n            path: '/',\n            expires: accessTokenExpires\n            //secure: true\n            //httpOnly: true\n        });\n};\nconst setRefreshToken = (refreshToken) => {\n    const refreshTokenExpires = new Date(jwt_decode(refreshToken).exp * 1000);\n    refreshTokenExpires.setMinutes(refreshTokenExpires.getMinutes() - 1, 0, 0);\n\n    cookie.save('refreshToken', refreshToken,\n        {\n            path: '/',\n            expires: refreshTokenExpires,\n            //secure: true\n            //httpOnly: true\n        });\n};","import React from 'react';\nimport '../css/TrainingCard.css' // 충돌날까봐 일단 파일 이름은 안바꿧음!!\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport 'moment/locale/ko';\nimport { API_BASE_URL } from '../utils/authHttpWrapper';\n\nconst TrainingCard = (props) => {\n\n    const setDate = modifiedDate => {\n        let modifiedTime = new Date(modifiedDate);\n        let nowTime = moment();\n        let timeAmount = (nowTime - modifiedTime) / 1000;\n        let time = '';\n\n        if (timeAmount >= 60 * 60 * 24 * 365) time = (timeAmount / (60 * 60 * 24 * 365)).toFixed() + '년 전';\n        else if (timeAmount >= 60 * 60 * 24 * 30) time = (timeAmount / (60 * 60 * 24 * 30)).toFixed() + '달 전';\n        else if (timeAmount >= 60 * 60 * 24) time = (timeAmount / (60 * 60 * 24)).toFixed() + '일 전';\n        else if (timeAmount >= 60 * 60) time = (timeAmount / (60 * 60)).toFixed() + '시간 전';\n        else if (timeAmount >= 60) time = (timeAmount / (60)).toFixed() + '분 전';\n        else if (timeAmount >= 0) time = (timeAmount).toFixed() + '초 전';\n        return time;\n    };\n\n    return (\n        <div className='Video'>\n            <Link className='TrainingCardWrapper' to={\"/training/\" + props.training.trainingId}>\n                <img className='ThumbNail' src={API_BASE_URL + \"/thumbnail/\"+props.training.trainingId}\n                    position=\"relative\" opacity=\"0.5\" width=\"300\" height=\"190\" alt=\"\"/>\n                <font className='VideoName'>\n                    {props.training.title}<br />\n                </font>\n                <font className='Channel'>\n                    {props.training.trainer}<br />\n                </font>\n                <font className='Play'>\n                    {\"조회수 \" + props.training.views + \"회\"}\n                </font>\n                &nbsp;-&nbsp;\n                    <font className='time'>\n                    {setDate(props.training.modifiedDate)}\n                </font>\n            </Link>\n        </div>\n    );\n};\n\nexport default TrainingCard;","import React from 'react';\nimport TrainingCard from './TrainingCard';\n\nconst Trainings = (props) => {\n    return (\n        <div>\n            {props.trainings.map(training => <TrainingCard key={training.trainingId} training={training}/>)}\n        </div>\n    );\n};\n\nexport default Trainings;","import React, { useEffect, useState } from 'react';\nimport '../css/Main.css';\nimport { getHttp } from \"../utils/authHttpWrapper\";\nimport Trainings from \"../components/Trainings\";\n\nconst Main = (props) => {\n\n    const [trainings, setTrainings] = useState([]);\n\n    useEffect(() => {\n        getHttp(\"/trainings\")\n            .then(r => {\n                if (r.data._embedded !== undefined)\n                    setTrainings(r.data._embedded.trainingList)\n            }).catch(error => {\n                alert(error.response.data.message)\n            });\n    }, []);\n\n    return (\n        <div className='Trainings'>\n            <Trainings trainings={trainings} />\n        </div>\n    )\n};\n\nexport default Main;","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../css/SearchVideoList.css';\n\nfunction SearchVideoList() {\n    const [videoInfo, setVideoInfo] = useState({\n        videoName: \"영상 제목\",\n        channelName: \"채널이름\",\n        view: \"날짜\",\n        content: \"영상 설명\"\n    });\n\n    useEffect(() => {\n        setVideoInfo({\n            videoName: \"영상 제목\",\n            channelName: \"채널이름\",\n            view: \"날짜\",\n            content: \"영상 설명\"\n        });\n    }, [])\n\n\n    return (\n        <div>\n            <Link className='SearchVideo' to='/training'>\n                <div>\n                    {/* 나중에 List로 구현 */}\n\n                    <img className=\"VideoImage\"\n                        src='https://tistory4.daumcdn.net/tistory/3028340/skin/images/bts_sreenshot.001.jpeg'\n                        alt='' />\n                    <text>\n                        <div className='VideoInfo'>\n                            <div className='SearchVideoName'>\n                                {videoInfo.videoName}\n                            </div>\n                            <div className='SearchChannelName'>\n                                {videoInfo.channelName}\n                            </div>\n                            <div className='SearchVideoInfo'>\n                                <font>\n                                    {videoInfo.view}\n                                </font>\n                                &nbsp;-&nbsp;\n                                <font>\n                                    {videoInfo.date}\n                                </font>\n                            </div>\n                            <div className='SearchVideoContent'>\n                                {videoInfo.content}\n                            </div>\n                        </div>\n                    </text>\n                </div>\n            </Link>\n        </div>\n    );\n}\n\nexport default SearchVideoList;","import React, { useState, useEffect } from 'react';\nimport '../css/ProfileOfUser.css';\nimport SearchVideoList from '../components/SearchVideoList';\nimport { Link } from 'react-router-dom';\nimport { getUserId, getUserNickName, postHttp, API_BASE_URL, putHttp } from '../utils/authHttpWrapper';\n\nconst ProfileOfTrainer = (props) => {\n    const [nickName, setNickName] = useState('');\n    const [nickNameChange, setNickNameChange] = useState(false);\n    const [newNickName, setNewNickName] = useState('');\n    const imgDefault = 'https://avatars1.githubusercontent.com/u/50524321?s=460&u=7621eb647ffc21484a8ddb3914275574063c08cb&v=4';\n    const [imgPreview, setImagePreview] = useState('');\n    const [imgUpload, setImgUpload] = useState('');\n    const [imgChanging, setImageChanging] = useState(false);\n\n    useEffect(() => {\n        getUserNickName()\n            .then(r => setNickName(r))\n            .then(() => getUserId())\n            .then(userId => setImgUpload(API_BASE_URL + '/profile/' + userId + '/image'))\n    }, [])\n\n    // useEffect(() => {\n\n    // }, [nickName])\n\n    // useEffect(() => {\n\n    // }, [imgUpload])\n\n    const onChangeNickName = e => setNewNickName(e.target.value);\n\n    const changeNickName = async () => {\n        if (nickNameChange === false) {\n            setNickNameChange(true);\n        }\n        else if (nickNameChange === true && newNickName !== '') {\n\n            putHttp('/profile', {\n                nickName: newNickName\n            }).then(() => {\n                console.log(newNickName);\n                setNickName(newNickName);\n                setNickNameChange(false);\n            }).catch(error => {\n                console.log('error on component : ', error.response.data)\n            })\n        }\n    }\n\n    const onKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            changeNickName();\n        }\n    }\n\n    const onImageChanged = (e) => {\n        setImagePreview(URL.createObjectURL(e.target.files[0]))\n        setImgUpload(e.target.files[0])\n    }\n\n    const submitImage = async (e) => {\n        if (imgChanging === false) {\n            setImageChanging(true);\n        }\n        else {\n            setImageChanging(false);\n\n            const fd = new FormData();\n            let userId = await getUserId();\n\n            fd.append('image', imgUpload);\n            postHttp('/profile/' + userId + '/image', fd)\n                .then(res => {\n                    setImgUpload(API_BASE_URL + '/profile/' + userId + '/image');\n                })\n                .catch(error => {\n                    console.log(error.response);\n                });\n        }\n    }\n\n    const onImageError = () => {\n        setImgUpload(imgDefault);\n    }\n\n    return (\n        <div>\n            <div className='ProfileInfo'>\n                <div>\n                    <img onError={onImageError} className='UserProfile' src={imgChanging ? imgPreview : imgUpload} alt={''}></img>\n                    {imgChanging ? <div><input className='ProfileImgInput' type='file' accept='image/jpg,impge/png,image/jpeg,image/gif' onChange={onImageChanged} alt={\"\"} /></div> : <br />}\n                    <button className='ProfileImgEditButton' onClick={submitImage}>프로필 편집</button>\n                </div>\n                <div className='NickNameInfo'>\n                    <div>\n                        <div className='NickName'>{nickNameChange ?\n                            <input onChange={onChangeNickName} onKeyPress={onKeyPress}\n                                placeholder={nickName} /> : nickName}</div>\n                        <button className='NickNameEditButton' onClick={changeNickName}>닉네임 편집</button>\n                    </div>\n                </div>\n            </div>\n            <div className='MyTrainingArea1'>\n                <div className='MyTrainingArea2'>\n                    <text className=\"MyUploadTrainingListTitle\">\n                        내가 올린 운동\n                        </text>\n                    <Link to='/upload'>\n                        <button className='UploadButton'>+</button>\n                    </Link>\n                    <div className='MyUploadTriningListBackground'><SearchVideoList /></div>\n                </div>\n\n                {/* <text style={{marginLeft:'20px'}}>\n                    <div style={{ display: 'table-cell' }}>\n                        <div style={{ fontSize: 'xx-large', marginBottom: '10px' }}>\n                            구독 리스트\n                        </div>\n                        <div style={{ backgroundColor: 'lightgray', width: '420px', height:'800px', padding: '20px' }}>\n                            <Trainings />\n                        </div>\n                    </div>\n                </text> */}\n            </div>\n        </div>\n    );\n}\n\nexport default ProfileOfTrainer;","import React, { useState } from 'react';\nimport '../css/MyComment.css';\nimport { postHttp } from '../utils/authHttpWrapper'\n\nconst MyComment = (props) => {\n    const [commentBody, setCommentBody] = useState('');\n\n    const onChangeCommentBody = e => setCommentBody(e.target.value);\n\n    const inputComment = async () => {\n        if (commentBody !== '') {\n            await postHttp('/comments/' + props.trainingId, {\n                message: commentBody\n            }).catch(error => {\n                console.log('error on component : ', error.response.data)\n            });\n            alert('입력되었습니다.')\n            setCommentBody('')\n        }\n        else {\n            alert('댓글 내용을 입력하세요.')\n        }\n\n        // props.history.push('/training/' + props.trainerId);\n\n        props.refresh()\n    };\n\n    return (\n        <div>\n            <div className='Comment'>\n                <text>\n                    댓글\n                </text>\n            </div>\n            <div className='MyComment'>\n                <img className='MyProfile' src=\"https://avatars1.githubusercontent.com/u/19163372?s=60&v=4\" alt=\"\" />\n                <textarea className='Input' placeholder=\"댓글 입력\" value={commentBody} onChange={onChangeCommentBody} />\n                <button className='CommentButton' onClick={inputComment}>\n                    입력\n                </button>\n            </div>\n        </div>\n    );\n}\n\nexport default MyComment;","import React, { useEffect, useState } from 'react'\nimport '../css/VideoInfo.css'\nimport { deleteHttp, postHttp, getUserId } from '../utils/authHttpWrapper';\n\nconst VideoInfo = (props) => {\n    const [like, setLike] = useState(props.trainingInfo.likes)\n    const [subscribe, setSubscribe] = useState(props.trainingInfo.subscribe)\n\n    useEffect(() => {\n        setLike(props.trainingInfo.likes)\n    }, [props.trainingInfo.likes])\n\n    useEffect(() => {\n        setSubscribe(props.trainingInfo.subscribe)\n    }, [props.trainingInfo.subscribe])\n\n    const addLike = () => {\n        \n        if (props.trainingInfo.like === false) {\n            postHttp('/trainings/' + props.trainingId + '/like', {})\n            .then(()=>props.getTrainingInfo())\n            .then(()=>alert('좋아요 되었습니다.'))\n        } else {\n            deleteHttp('/trainings/' + props.trainingId + '/like')\n            .then(()=>props.getTrainingInfo())\n            .then(()=>alert('좋아요 취소되었습니다.'))\n        }\n    }\n\n    const ChangeSubscribe = async () => {\n        let userId = await getUserId()\n        \n        if (props.trainingInfo.subscribe === false) {\n            postHttp('/trainer/' + userId, {})\n            .then(()=>props.getTrainingInfo())\n            .then(()=>alert('구독 되었습니다.'))\n        } else {\n            deleteHttp('/trainer/' + userId)\n            .then(()=>props.getTrainingInfo())\n            .then(()=>alert('구독 취소되었습니다.'))\n        }\n    }\n\n    return (\n        <div className='VideoInfos'>\n            <div className='NameLike'>\n                <text className='TrainingVideoName'>{props.trainingInfo.title}</text>\n                <div className='Like'>\n                    <button className='LikeButton' onClick={addLike} />\n                    <text>{like}</text>\n                </div>\n                {/* <button className='InputButton'>+</button> */}\n            </div>\n            <div className='Count'>\n                <text>{'조회수 ' + props.trainingInfo.views + '회'}</text>\n                <text className='Date'>{props.trainingInfo.createdDate.toString().slice(0, 10)}</text>\n            </div>\n            <div className='ChannelInfo'>\n                <img className='Profile' src=\"https://avatars2.githubusercontent.com/u/18184139?s=64&v=4\" alt=\"\" />\n                <text className='ChannelName'>{props.trainingInfo.trainer}</text>\n                <button className='SubscribeButton' onClick={ChangeSubscribe}>{subscribe?'구독중':'구독'}</button>\n            </div>\n            <div className='VideoExplain'>\n                <text>{props.trainingInfo.body}</text>\n            </div>\n            <hr />\n        </div>\n    )\n}\n\nexport default VideoInfo;","import React, { useState } from 'react';\nimport '../css/Comment.css';\nimport { getUserId, putHttp, deleteHttp } from '../utils/authHttpWrapper'\n\nconst Comment = (props) => {\n\n    const [isModify, setIsModify] = useState(false);\n    const [modifiedComment, setModifiedComment] = useState('');\n\n    const onChangeModifedComment = e => setModifiedComment(e.target.value);\n\n    const onModifyComment = async () => {\n        let userId = await getUserId();\n        if (userId === props.comment.commenterId && isModify === false) {\n            setIsModify(true)\n        }\n        else if (userId === props.comment.commenterId && isModify === true && modifiedComment === '') {\n            setIsModify(false)\n        }\n        else if (userId === props.comment.commenterId && isModify === true && modifiedComment !== '') {\n            await putHttp('/comments/' + props.comment.commentId, {\n                message: modifiedComment\n            }).catch(error => {\n                console.log('error on component : ', error.response.data)\n            });\n            setIsModify(false)\n            setModifiedComment('')\n            props.refresh()\n        }\n        else {\n            alert('자신의 댓글만 수정 가능합니다.')\n        }\n    }\n\n    const onDeleteComment = async () => {\n        let userId = await getUserId();\n        if (userId === props.comment.commenterId) {\n            await deleteHttp('/comments/' + props.comment.commentId, {\n                message: modifiedComment\n            }).catch(error => {\n                console.log('error on component : ', error.response.data)\n            });\n            alert('삭제되었습니다.')\n            props.refresh()\n        }\n        else {\n            alert('자신의 댓글만 삭제 가능합니다.')\n        }\n    }\n\n    const onKeyPress = (e) => {\n        if (e.key === 'Enter') onModifyComment();\n    }\n\n    return (\n        <div className='CommentList'>\n            <img className='MyProfile' src=\"https://avatars0.githubusercontent.com/u/59818703?s=64&v=4\" alt=\"\" />\n            <div>\n                <div className='CommentInfos'>\n                    <div className='CommentName'>\n                        {props.comment.commenterId}\n                    </div>\n                    <div className='CommentBody'>\n                        {isModify ? <input value={modifiedComment} placeholder={props.comment.message} onChange={onChangeModifedComment} onKeyPress={onKeyPress} /> : props.comment.message}\n                    </div>\n                    <button className='Modify' onClick={onModifyComment} >수정</button>\n                    <button className='Delete' onClick={onDeleteComment} >삭제</button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Comment;","import React from \"react\"\n\nexport default function({ name, target }) {\n  if (!target) {\n    return <p>{`loading ${name} ...`}</p>\n  }\n  if (target instanceof Error) {\n    return (\n      <>\n        <p>{`There was an error while loading ${name}`}</p>\n        <font color=\"red\">{target.message}</font>\n      </>\n    )\n  }\n  return <></>\n}\n","export function getMediaStreamConstraints(facingMode, frameRate) {\n  return {\n    audio: false,\n    video: {\n      facingMode,\n      frameRate\n    }\n  }\n}\n\nexport function getConfidentPoses(poses, minPoseConfidence, minPartConfidence) {\n  return poses\n    .filter(({ score }) => score > minPoseConfidence)\n    .map(pose => ({\n      ...pose,\n      keypoints: pose.keypoints.filter(({ score }) => score > minPartConfidence)\n    }))\n}\n\nexport function drawKeypoints(ctx, keypoints) {\n  keypoints.forEach(({ position }) => {\n    const { x, y } = position\n    ctx.beginPath()\n    ctx.arc(x, y, 5, 0, 2 * Math.PI, false)\n    ctx.fillStyle = \"red\"\n    ctx.fill()\n  })\n}\n","import React, {useEffect, useRef, useState} from \"react\"\nimport PropTypes from \"prop-types\"\nimport Loading from \"./Loading\"\nimport useInputImage from \"../hooks/useInputImage\"\nimport useLoadPoseNet from \"../hooks/useLoadPoseNet\"\nimport {getConfidentPoses} from \"../util\"\n\nexport default function PoseNet({\n  style,\n  className,\n  facingMode,\n  frameRate,\n  input,\n  onEstimate,\n  inferenceConfig,\n  modelConfig,\n  minPoseConfidence,\n  minPartConfidence,\n  width,\n  height,\n  curFrame\n}) {\n  const [ctx, setCtx] = useState()\n  const net = useLoadPoseNet(modelConfig)\n  const [errorMessage, setErrorMessage] = useState()\n  const onEstimateRef = useRef()\n  const inferenceConfigRef = useRef()\n  onEstimateRef.current = onEstimate\n  inferenceConfigRef.current = inferenceConfig\n  const image = useInputImage({\n    input,\n    width,\n    height,\n    facingMode,\n    frameRate\n  })\n\n  useEffect(() => {\n    if (!net || !image || !ctx) return () => { }\n    if ([net, image].some(elem => elem instanceof Error)) return () => { }\n\n    let intervalId\n    let requestId\n    function cleanUp() {\n      clearInterval(intervalId)\n      cancelAnimationFrame(requestId)\n    }\n\n    async function estimate() {\n      try {\n        ctx.drawImage(image, 0, 0, width, height)\n        if (curFrame !== -1) {\n          const poses = await net.estimatePoses(image, inferenceConfigRef.current)\n          const confidentPoses = getConfidentPoses(\n            poses,\n            minPoseConfidence,\n            minPartConfidence\n          )\n          onEstimateRef.current(confidentPoses)\n        }\n        // confidentPoses.forEach(({ keypoints }) => drawKeypoints(ctx, keypoints))\n      } catch (err) {\n        cleanUp()\n        setErrorMessage(err.message)\n      }\n    }\n\n    if (frameRate) {\n      intervalId = setInterval(estimate, Math.round(1000 / frameRate))\n      return cleanUp\n    }\n\n    function animate() {\n      estimate()\n      requestId = requestAnimationFrame(animate)\n    }\n    requestId = requestAnimationFrame(animate)\n\n    return cleanUp\n  }, [\n    ctx,\n    net,\n    image,\n    width,\n    height,\n    frameRate,\n    minPartConfidence,\n    minPoseConfidence,\n    curFrame\n  ])\n\n  return (\n    <>\n      <Loading name=\"model\" target={net} />\n      <Loading name=\"input\" target={image} />\n      <font color=\"red\">{errorMessage}</font>\n      <canvas\n        style={style}\n        className={className}\n        ref={c => {\n          if (c) {\n            setCtx(c.getContext(\"2d\"))\n          }\n        }}\n        width={width}\n        height={height}\n      />\n    </>\n  )\n}\n\nPoseNet.propTypes = {\n  /** canvas style */\n  // eslint-disable-next-line react/forbid-prop-types\n  style: PropTypes.object,\n  /** canvas className */\n  className: PropTypes.string,\n  /** @see https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints/facingMode  */\n  facingMode: PropTypes.string,\n  /** First of all frameRate is parameter of [getUserMedia()](https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia)\n   *  see [MediaTrackConstraints.frameRate](https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints/frameRate)\n   *  <br/>\n   *  Second frameRate affects how often estimation occurs. react-posenet internally do <br/>\n   *  [setInterval](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setInterval)(() => { estimatePose() } , (1000 / framerate))\n   *  to estimate image continuously. <br/>\n   *  If frameRate is undefined react-posnet use [requestAnimationFrame](https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame) */\n  frameRate: PropTypes.number,\n  /**\n   * the input image to feed through the network. <br/>\n   * If input is not specified react-posenet try to [getUserMedia](https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia)<br/>\n   * @see [tfjs-posenet document](https://github.com/tensorflow/tfjs-models/tree/master/posenet#params-in-estimatesinglepose)\n   */\n  input: PropTypes.element,\n  /**\n   * gets called after estimation. [poses](https://github.com/tensorflow/tfjs-models/tree/master/posenet#keypoints) is a passed parameter\n   */\n  onEstimate: PropTypes.func,\n  /**\n   * If you want swtich between single / multi pose estimation.<br/>\n   * use decodingMethod [please check this code](https://github.com/tensorflow/tfjs-models/blob/master/posenet/demos/camera.js#L392) <br/>\n   * {decodingMethod: \"single-person\"} / {decodingMethod: \"multi-person\"}\n   * @see [tfjs-posenet documentation](https:/github.com/tensorflow/tfjs-models/tree/master/posenet#params-in-estimatemultipleposes)\n   */\n  inferenceConfig: PropTypes.shape({\n    decodingMethod: PropTypes.string,\n    flipHorizontal: PropTypes.bool,\n    maxDetections: PropTypes.number,\n    scoreThreshold: PropTypes.number,\n    nmsRadius: PropTypes.number\n  }),\n  /** @see [tfjs-posenet documentation](https://github.com/tensorflow/tfjs-models/tree/master/posenet#config-params-in-posenetload) */\n  modelConfig: PropTypes.shape({\n    architecture: PropTypes.string,\n    outputStride: PropTypes.number,\n    inputResolution: PropTypes.oneOfType([PropTypes.number, PropTypes.object]),\n    quantBytes: PropTypes.number\n  }),\n  /** minimum confidence constraint for pose */\n  minPoseConfidence: PropTypes.number,\n  /** minimum confidence constraint for each [part](https://github.com/tensorflow/tfjs-models/tree/master/posenet#keypoints) */\n  minPartConfidence: PropTypes.number,\n  /** canvas width */\n  width: PropTypes.number,\n  /** canvas height */\n  height: PropTypes.number\n}\n\nPoseNet.defaultProps = {\n  style: {},\n  className: \"\",\n  facingMode: \"user\",\n  frameRate: undefined,\n  input: undefined,\n  onEstimate: () => { },\n  inferenceConfig: {},\n  modelConfig: {},\n  minPoseConfidence: 0.1,\n  minPartConfidence: 0.5,\n  width: 600,\n  height: 600\n}\n","import { useState, useEffect } from \"react\"\nimport * as posenet from \"@tensorflow-models/posenet\"\nimport to from \"await-to-js\"\n\nexport default function(modelConfig = {}) {\n  const modelConfigString = JSON.stringify(modelConfig)\n  const [net, setNet] = useState(null)\n  useEffect(() => {\n    async function loadNet() {\n      const [err, poseNet] = await to(\n        posenet.load(JSON.parse(modelConfigString))\n      )\n      if (err) {\n        setNet(err)\n        return\n      }\n      setNet(poseNet)\n    }\n    loadNet()\n  }, [modelConfigString])\n  return net\n}\n","import { useState, useEffect } from \"react\"\nimport { useUserMediaVideo } from \"use-user-media\"\nimport { getMediaStreamConstraints } from \"../util\"\n\nexport default function useInputImage({\n  input,\n  width,\n  height,\n  facingMode,\n  frameRate\n}) {\n  const [image, setImage] = useState()\n  const userMediaDisabled = typeof input === \"object\"\n  const constraints = userMediaDisabled\n    ? { video: false, audio: false }\n    : getMediaStreamConstraints(facingMode, frameRate)\n  const [userMediaError, video] = useUserMediaVideo(constraints)\n\n  useEffect(() => {\n    if (userMediaDisabled) {\n      input.width = width\n      input.height = height\n      setImage(input)\n      return\n    }\n    if (userMediaError) {\n      setImage(userMediaError)\n      return\n    }\n    if (video) {\n      video.width = width\n      video.height = height\n      setImage(video)\n    }\n  }, [userMediaDisabled, userMediaError, height, input, video, width])\n  return image\n}\n","export default async function cosineSimilarity(trainer, user) {\n    const v1 = await getVector(trainer);\n    const v2 = await getUserVector(user);\n\n    var score = await getScore(v1, v2) * 100 / 8;\n    console.log(score);\n    return score;\n}\n\nfunction getScore(v1, v2) {\n    var score = cosine(v1, v2);\n    return score;\n}\n\nfunction cosine(v1, v2) {\n    var score = 0;\n\n    for (var i = 0; i < 8; i++) {\n        score += ((v1[i].x * v2[i].x) + (v1[i].y * v2[i].y)) / (getWeight(v1[i]) * getWeight(v2[i]));\n    }\n    return score;\n}\n\nfunction getWeight(vector) {\n    return Math.sqrt(Math.pow(vector.x, 2) + Math.pow(vector.y, 2));\n}\n\nfunction getVector(json) {\n    const keyPoint = json.keyPoint;\n    var vector = [];\n\n    for (var i = keyPoint.length - 1; i >= 7; i--) {\n        if (i === 12 || i === 11) {\n            continue;\n        }\n        var point = {\n            \"x\": parseFloat(keyPoint[i].x) - parseFloat(keyPoint[i - 2].x),\n            \"y\": parseFloat(keyPoint[i].y) - parseFloat(keyPoint[i - 2].y)\n        };\n        vector.push(point);\n    }\n    return vector;\n}\n\nasync function getUserVector(json) {\n    const keyPoint = json.keypoints;\n    var vector = [];\n    \n    for (var i = keyPoint.length - 1; i >= 7; i--) {\n        if (i === 12 || i === 11) {\n            continue;\n        }\n        var point = {\n            \"x\": parseFloat(keyPoint[i].position.x) - parseFloat(keyPoint[i - 2].position.x),\n            \"y\": parseFloat(keyPoint[i].position.y) - parseFloat(keyPoint[i - 2].position.y)\n        };\n        vector.push(point);\n    }\n    return vector;\n}","import React, { useState, useEffect } from 'react';\nimport '../css/Player.css';\nimport ReactPlayer from 'react-player';\nimport PoseNet from '../utils/posenet/components/PoseNet'\n//import mockData from '../utils/mockData'\nimport cosineSimilarity from '../utils/cosineSimilarity'\nimport { getHttp } from '../utils/authHttpWrapper';\n\n//const fLen = mockData.frames.length;\nconst delayFrame = -2;\nconst frameRate = 30;\nconst minPoseConfidence = 0;\n\nfunction Player() {\n    const [curFrame, setCurFrame] = useState(-1);\n    const [player, setPlayer] = useState();\n    const [playing, setPlaying] = useState(false);\n    const [score, setScore] = useState(0.0);\n    const [style, setStyle] = useState('red');\n    const [mockData, setMockData]= useState([]);\n    const [fLen, setFLen]= useState(0);\n\n    useEffect(()=>{\n        getHttp(\"/trainings/7/poses\")\n        .then(res => {\n            setMockData(res.data.frames)\n            return res.data.frames.length\n        })\n        .then(r=>setFLen(r))\n    },[])\n\n    useEffect(() => {\n        if (0 <= score && score < 60) {\n            setStyle('red');\n        } else if (60 <= score && score < 88) {\n            setStyle('yellow');\n        } else {\n            setStyle('green');\n        }\n\n    }, [score]);\n\n    async function estimate(curFrame, setState, a) {\n        var frame = curFrame + delayFrame;\n        if (a[0] != null && curFrame >= 0) {\n            try {\n                if (mockData.frames[frame].keyPoint.length === 17 && a[0].keypoints.length === 17) {\n                    cosineSimilarity(mockData.frames[frame], a[0])\n                        .then(score => setScore(score))\n                    console.log(score);\n                } else {\n                    console.log(\"전신이 나와야합니다.\");\n                }\n            } catch (e) {\n                console.log(\"전신이 나와야합니다.\");\n            }\n        }\n        setState(-1);\n    }\n\n    const onProgress = (e) => {\n        setCurFrame(Math.floor(fLen * e.played))\n        player.seekTo(e.playedSeconds)\n    }\n\n    const onPause = (e) => {\n        setPlaying(false);\n        console.log(player.playing)\n    }\n    const onPlay = (e) => {\n        setPlaying(true);\n        console.log(playing)\n        //console.log(player.config.playing)\n    }\n\n    return (\n        <div>\n            <div style={{display:\"block\"}}>\n            <ReactPlayer\n                id=\"player\"\n                url='https://mexusapi.codingnome.dev/streaming/training/7/video' playing controls\n                width=\"50%\"\n                height=\"100%\"\n                onPlay={onPlay}\n                onPause={onPause}\n                progressInterval={1000 / 10}\n                onProgress={onProgress}\n                // eslint-disable-next-line\n                playing={playing}\n            />\n            <ReactPlayer\n                id=\"player\"\n                className=\"shape\"\n                ref={p => setPlayer(p)}\n                url='https://mexusapi.codingnome.dev/streaming/training/7/shape' playing controls\n                width=\"50%\"\n                // eslint-disable-next-line\n                playing={playing}\n                height=\"100%\"\n            />\n            <PoseNet\n                className=\"cam\"\n                style={{ zIndex: \"-1\" }}\n                onEstimate={(a) => estimate(curFrame, setCurFrame, a)}\n                frameRate={frameRate}\n                flipHorizontal={true}\n                //width={}\n                height={340}\n                minPoseConfidence={minPoseConfidence}\n                curFrame={curFrame}\n            />\n            </div>\n            <div style={{background: style,fontSize: \"30px\",width:\"100%\",display:\"flex\",justifyContent: \"center\"}}>\n                {score}\n            </div>\n        </div>\n\n\n    );\n}\n\nexport default Player;","import React, { useEffect, useState } from 'react';\nimport MyComment from '../components/MyComment.js'\nimport VideoInfo from '../components/VideoInfo.js'\nimport { getHttp } from \"../utils/authHttpWrapper\";\nimport Comment from \"../components/Comment\";\nimport { now } from 'moment';\nimport Player from '../components/Player'\n\nconst Training = (props) => {\n    const [trainingInfo, setTrainingInfo] = useState({\n        title: '',\n        trainerId: '',\n        trainer: '',\n        body: '',\n        createdDate: new Date(now)\n    });\n    const [comments, setComments] = useState([]);\n\n    useEffect(() => {\n        getTrainingInfo();\n        // eslint-disable-next-line\n    }, [props.match.params.trainingId]);\n\n    const refreshComments = () => {\n        getHttp(\"/trainings/\" + props.match.params.trainingId + '/comments')\n            .then(response => {\n                if (response.data.page.totalElements !== 0)\n                    setComments(response.data._embedded.commentList)\n            })\n    }\n\n    const getTrainingInfo = async () => {\n        getHttp(\"/trainings/\" + props.match.params.trainingId)\n            .then(response => setTrainingInfo(response.data))\n            .then(async () => await getHttp(\"/trainings/\" + props.match.params.trainingId + \"/comments\"))\n            .then(response => {\n                if (response.data.page.totalElements !== 0)\n                    setComments(response.data._embedded.commentList)\n            })\n    }\n\n    return (\n        <div>\n            <Player/>\n            <VideoInfo trainingInfo={trainingInfo} trainingId={props.match.params.trainingId} getTrainingInfo={getTrainingInfo} />\n            <MyComment trainingId={props.match.params.trainingId} refresh={refreshComments} />\n            {comments.map((comment, index) => <Comment key={index} commentId={props.match.params.commentId} comment={comment} refresh={refreshComments} />)}\n        </div>\n    );\n};\n\nexport default Training;","import React from 'react';\nimport '../css/Filter.css';\n\nconst Filter = () => {\n    return(\n        <button className='FilterButton'>필터</button>\n    )\n}\n\nexport default Filter;","import React from 'react';\nimport SearchVideoList from '../components/SearchVideoList';\nimport Filter from '../components/Filter';\nimport '../css/Search.css';\n\nfunction Search() {\n    return (\n        <div className='SearchWrapper'>\n            <Filter />\n            <div className='SearchVideoList'>\n                <SearchVideoList />\n            </div>\n        </div>\n    );\n}\n\nexport default Search;","import React, { useEffect, useState } from 'react';\nimport '../css/SignUp.css';\nimport { checkLoginStatus, getHttp, getUserId, postHttp, setTokens } from '../utils/authHttpWrapper'\n\nimport { Link, withRouter } from 'react-router-dom';\n\nconst SignUp = (props) => {\n    const [id, setId] = useState(\"\");\n    const [chkId, setChkId] = useState(\"\");\n    const [nick, setNick] = useState(\"\");\n    const [chkNick, setChkNick] = useState(\"\");\n    const [pw, setPw] = useState(\"\");\n    const [rePw, setRePw] = useState(\"\");\n    const [chkPw, setChkPw] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [chkEmail, setChkEmail] = useState(\"\");\n\n    const onChangeId = e => setId(e.target.value);\n    const onChangeNick = e => setNick(e.target.value);\n    const onChangePw = e => setPw(e.target.value);\n    const onChangeRepw = e => setRePw(e.target.value);\n    const onChangeEmail = e => setEmail(e.target.value);\n\n    useEffect(() => {\n        redirectHome();\n        setChkId('❌');\n        setChkNick('❌');\n        // eslint-disable-next-line\n    }, []);\n\n    useEffect(() => {\n        if (pw.length < 1 || rePw.length < 1) {\n            setChkPw('❌')\n            // 비밀번호가 같다면 일치\n        } else if (pw === rePw) {\n            setChkPw('✅')\n            // 비밀번호가 같지 않다면 불일치\n        } else {\n            setChkPw('❌')\n        }\n    }, [pw, rePw]);\n\n    useEffect(() => {\n        const emailRegExp = /^[\\w-]+(\\.[\\w-]+)*@([a-z0-9-]+(\\.[a-z0-9-]+)*?\\.[a-z]{2,6}|(\\d{1,3}\\.){3}\\d{1,3})(:\\d{4})?$/;\n        if (email.match(emailRegExp)) {\n            setChkEmail(\"✅\")\n        } else {\n            setChkEmail(\"❌\")\n        }\n    }, [email]);\n\n    const signUp = async () => {\n        let responseData = await postHttp('/auth/signup', {\n            id: id,\n            password: pw,\n            nickName: nick,\n            email: email\n        }).catch(error => {\n            console.log('error on component : ', error.response.data)\n        });\n        if (responseData !== undefined) {\n            await setTokens(responseData.data.accessToken, responseData.data.refreshToken);\n            let userId = await getUserId();\n            alert(userId + \"님 반갑습니다.\");\n            props.setIsLogin(true)\n            props.history.push('/')\n        }\n    };\n\n    const checkNick = async () => {\n        let res = await getHttp('/auth/checkNickName/' + nick)\n            .catch(e => setChkNick(\"❌\"));\n        if (res !== undefined)\n            if (res.status === 200)\n                setChkNick(\"✅\");\n            else if (res.status === 202)\n                setChkNick(\"❌\");\n    };\n\n    const checkId = async () => {\n        let res = await getHttp('/auth/checkid/' + id)\n            .catch(e => setChkId(\"❌\"));\n        if (res.status === 200)\n            setChkId(\"✅\");\n        else if (res.status === 202)\n            setChkId(\"❌\");\n    };\n    const redirectHome = async () => {\n        let status = await checkLoginStatus();\n        if (status) {\n            alert(\"이미 로그인된 상태입니다.\");\n            props.history.push('/')\n        }\n    };\n\n    return (\n        <div className='SignUpWrapper'>\n            <Link to='/'>\n                <button className='MainButton'>\n                </button>\n            </Link>\n            <div>\n                <input className='NickIdInput' placeholder='닉네임' value={nick} onChange={onChangeNick} />{chkNick}\n                <button className='DuplicateButton' onClick={checkNick}> 닉네임<br />중복확인</button>\n                <div>\n                    <input className='NickIdInput' placeholder='아이디' value={id} onChange={onChangeId} />{chkId}\n                    <button className='DuplicateButton' onClick={checkId}> ID<br />중복확인</button>\n                </div>\n                <input className='TextInput' placeholder='비밀번호' value={pw} type=\"password\" onChange={onChangePw} />\n                <div>\n                    <input className='PwEmailInput' placeholder='비밀번호 확인' value={rePw} type=\"password\" onChange={onChangeRepw} />{chkPw}\n                </div>\n                <input className='PwEmailInput' placeholder='이메일' type='email' value={email} onChange={onChangeEmail} />{chkEmail}\n                <div>\n                    <button className='SignInAndLogInButton' onClick={signUp}\n                        disabled={chkPw !== '✅' || chkEmail !== '✅' || chkId !== '✅' || chkNick !== '✅'}>\n                        회원가입 후 로그인\n                </button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default withRouter(SignUp);","import React, { useEffect, useState } from 'react';\nimport '../css/LogIn.css';\nimport { Link, withRouter } from 'react-router-dom';\nimport { checkLoginStatus, getUserId, postHttp, setTokens } from \"../utils/authHttpWrapper\";\n\n\nconst LogIn = (props) => {\n    const [id, setId] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const onChangeId = e => setId(e.target.value);\n    const onChangePawword = e => setPassword(e.target.value);\n\n    useEffect(() => {\n        redirectHome();\n        // eslint-disable-next-line\n    }, []);\n    const redirectHome = async () => {\n        let status = await checkLoginStatus();\n        if (status) {\n            alert(\"이미 로그인된 상태입니다.\");\n            props.history.push('/')\n        }\n    };\n    const signIn = async () => {\n        let responseData = await postHttp('/auth/signin', {\n            id: id,\n            password: password,\n        }).catch(error => {\n            alert(error.response.data.message)\n        });\n        if (responseData !== undefined) {\n            await setTokens(responseData.data.accessToken, responseData.data.refreshToken);\n            let userId = await getUserId();\n            alert(userId + \"님 반갑습니다.\");\n            props.setIsLogin(true)\n            props.history.push('/')\n        }\n    };\n\n    const onKeyPress = (e) => {\n        if (e.key === 'Enter') signIn();\n    }\n\n    return (\n        <div className='LoginWrapper'>\n            <Link to='/'>\n                <button className='MainButton'>\n                </button>\n            </Link>\n            <div>\n                <input className='TextInput' value={id} placeholder='아이디' onChange={onChangeId} onKeyPress={onKeyPress} />\n            </div>\n            <input className='TextInput' value={password} placeholder='비밀번호' type='password' onChange={onChangePawword} onKeyPress={onKeyPress} />\n            <div>\n            <button className='LogInButton' disabled={id === '' || password === ''} onClick={signIn} > 로그인</button>\n            </div>\n            <br />\n            <Link to='/signup'>\n                <button className='SignInButton'> 회원가입</button>\n            </Link>\n        </div>\n    );\n};\n\nexport default withRouter(LogIn);\n","import React, { useEffect, useState } from 'react';\nimport { postHttp } from '../utils/authHttpWrapper';\nimport '../css/Upload.css';\n\nconst Upload = (props) => {\n\n    const [uploadAvailable, setUploadAvailable] = useState(false);\n    const [video, setVideo] = useState('');\n    const [thumbnail, setThumbnail] = useState('');\n    const [videoName, setVideoName] = useState(\"\");\n    const [videoExplain, setVideoExplain] = useState(\"\");\n\n    useEffect(() => {\n        if (video === '' || thumbnail === \"\" || videoName === \"\" || videoExplain === \"\") {\n            setUploadAvailable(false);\n        } else {\n            setUploadAvailable(true);\n        }\n    }, [video, thumbnail, videoName, videoExplain]);\n\n    // 영상(1)과 썸네일(2) 업로드 추후에 진행\n\n    const changeVideoName = e => setVideoName(e.target.value);\n    const changeVideoExplain = e => setVideoExplain(e.target.value);\n\n\n    const upload = async () => {\n        let tID;\n        let uploadVideo = await postHttp('/trainings', {\n            title: videoName,\n            body: videoExplain\n        }).then(response => {\n            tID = response.data._links.self.href.slice(-1);\n            const fd = new FormData();\n            // console.log(fd)\n            fd.append('image', thumbnail)\n            postHttp('/thumbnail/'+tID, fd)\n        }).then(response => {\n            const fd = new FormData();\n            fd.append('video', video)\n            postHttp('/upload/trainings/'+tID, fd)\n        }).catch(error => {\n            console.log('error on component : ', error.response.data)\n        })\n        if (uploadVideo !== undefined) {\n            alert(\"<\" + videoName + \"> 업로드 되었습니다.\");\n            props.history.push('/mypage')\n        }\n    }\n\n    const UploadVideo = (e) => {\n        setVideo(e.target.files[0])\n    }\n\n    const UploadThumbnail = (e) => {\n        setThumbnail(e.target.files[0])\n    }\n    \n    return (\n        <div className='UploadWrapper'>\n            <input className='VideoUpload' type='file' accept='.mp4' onChange={UploadVideo} />  {/** 업로드할 영상을 선택해주세요 */}\n            <input className='ThumbNailUpload' type='file' accept='image/jpg,impge/png,image/jpeg,image/gif' onChange={UploadThumbnail}/>   {/** 대표사진을 선택해주세요. */}\n            <br />\n            <input className='UploadTitle' placeholder='영상 제목 입력' onChange={changeVideoName} />\n            <br />\n            <textarea className='UploadBody' placeholder='내용을 입력해주세요.' onChange={changeVideoExplain} />\n            <br/>\n            <button className='VideoUploadButton' disabled={!uploadAvailable} onClick={upload}>\n                영상 올리기\n            </button>\n        </div>\n    );\n}\n\nexport default Upload;","import React, {useEffect, useState} from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport TopBar from './components/TopBar'\nimport Main from './pages/Main'\nimport MyPage from './pages/ProfileOfTrainer'\nimport Training from './pages/Training';\nimport Search from './pages/Search';\nimport SignUp from './pages/SignUp';\nimport LogIn from './pages/LogIn';\nimport {checkLoginStatus} from \"./utils/authHttpWrapper\";\nimport Upload from './pages/Upload';\n\nfunction App() {\n    const [loginStatus, setLoginStatus] = useState(false);\n\n    useEffect(() => {\n        checkLogin()\n        // eslint-disable-next-line\n    }, []);\n\n    const checkLogin = async () => {\n        let status = await checkLoginStatus();\n        setLoginStatus(status)\n    };\n\n    return (\n        <Router basename={process.env.PUBLIC_URL}>\n            <TopBar loginStatus={loginStatus}/>\n            <Switch>\n                <Route exact path='/' component={Main}/>\n                <Route path='/training/:trainingId' component={Training}/>\n                <Route path='/mypage' component={MyPage}/>\n                <Route path='/search' component={Search}/>\n                <Route path='/login' render={() => <LogIn setIsLogin={setLoginStatus}/>}/>\n                <Route path='/signup' render={() => <SignUp setIsLogin={setLoginStatus}/>}/>\n                <Route path='/upload' component={Upload}/>\n            </Switch>\n        </Router>\n    );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport Main from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Main/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}